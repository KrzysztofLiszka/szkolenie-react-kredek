{"version":3,"sources":["App/api/account/accountEndpoints.ts","App/redux/index.ts","App/api/ships/shipEnpoints.ts","App/api/ships/shipInterfaces.ts","App/api/paints/PaintsEndpoints.ts","App/api/paints/PaintsInterface.ts","App/api/salesRepresentatives/salesRepEndpoints.ts","App/api/salesRepresentatives/salesRepInterfaces.ts","App/api/model/modelEnpoints.ts","App/api/model/modelInterface.ts","App/api/agent.ts","App/redux/reducers/sessionSlice.ts","App/redux/reducers/shipsReducer.ts","App/redux/reducers/rootReducer.ts","App/redux/store.ts","App/shared/components/LoaderScreen.tsx","App/shared/components/ProtectedRoute.tsx","App/assets/vessel.svg","App/routes/Auth/AuthView/routes/Ship/ShipPanel.tsx","App/routes/Auth/AuthView/routes/Home/Home.tsx","App/routes/Auth/AuthView/routes/TablePanel/TablePanel.tsx","App/shared/Navbar.tsx","App/routes/Auth/AuthView/routes/Predict/Predict.tsx","App/routes/Auth/AuthView/routes/MovementPanel/MapChart.tsx","App/shared/components/Utilites.tsx","App/routes/Auth/AuthView/routes/MovementPanel/MovementPanel.tsx","App/routes/Auth/AuthView/AuthView.tsx","App/routes/Login.tsx","App/App.jsx","index.js"],"names":["AccountEndpoints","login","loginRequest","requests","post","stringify","username","password","headers","validateSession","token","localStorage","getItem","get","params","Authorization","mapStateToProps","state","capitalizeEachWordInString","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","ShipEndpoints","getAllShips","pagination","filter","current","pageSize","transformResponse","concat","Axios","defaults","res","data","count","shipName","shipType","getShipDetails","shipID","replace","toString","response","ShipName","ShipType","getShipAllRoutes","pageNumber","getShipRouteDetails","routeID","getShipRouteWeather","getShipRouteAvgTimeSpentInPort","portID","PaintsEndpoints","getMostUsedPaints","SalesRepEndpoints","getSalesRepPaintsStatistics","getSalesRepHistoryOfPaints","salesRepId","ModelEndpoints","postModelPrediction","modelValues","console","log","lastPaintingDate","ppgmcTechnicalmanager","salesRep","shipBuilder","shipyardCountry","shipyardRegion","status","techmngCountry","techmngRegion","vesselAge","axios","baseURL","interceptors","request","use","config","error","Promise","reject","undefined","message","useDispatch","dispatch","responseBody","url","body","then","put","delete","sessionSlice","createSlice","name","initialState","loadingLogin","isFetchingValidation","info","reducers","authenticationStart","authenticationSuccess","action","payload","setItem","authenticationFailure","devalidateSession","removeItem","validationStart","validationSuccess","validationFailure","actions","setStateCallback","isMounted","a","agent","catch","shipsSlice","reducer","isFetchingData","ships","selectedShip","id","previous","total","fetchingShipsStart","fetchingShipsSuccess","push","fetchingShipsFailed","setSelectedShip","ShipId","shipDetailsStart","shipDetailsSuccess","shipDetailsFailure","fetchShips","statusText","fetchShipDetails","shipId","rootReducer","combineReducers","session","store","configureStore","LoadingScreen","props","style","container","width","height","position","top","left","zIndex","overflow","className","size","ProtectedRoute","_isMounted","isLoading","isUserAuthenticated","isUserAuthorized","this","value","setState","Component","rest","render","to","pathname","location","React","connect","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","transform","opacity","fill","stroke","strokeWidth","x","y","d","rx","cx","cy","r","ry","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","ShipPanel","Number","parseInt","match","ship_id","ship","history","justify","gutter","align","xl","sm","lg","md","xs","span","marginTop","fontWeight","Status","bodyStyle","paddingTop","paddingBottom","headStyle","type","extra","href","DDNextDate","onClick","redirectToMovementsPanel","bind","VesselAge","BuiltDate","DDLastDate","ShipManager","ShipOwner","ShipBuilder","SalesRepresentative","CountryOrigin","RegionOrigin","ShipOperator","Active","TechnicalManager","TechnicalManagerCountry","TechnicalManagerRegion","Home","useState","dataQuantity","dataTime","histogram","setHistogram","dataSalesRep","chartPie","setChartPie","dataPaintName","mostUsedPaint","setMostUsedPaint","useEffect","forEach","index","array","date","sum","sales_rep","reverse","quantity","product","minHeight","Fragment","textAlign","color","letterSpacing","labels","datasets","label","borderColor","backgroundColor","responsive","marginBottom","borderWidth","options","legend","columns","dataIndex","TablePanel","handleTableChange","filters","sorter","handleTableSearch","val","shipManager","shipOwner","shipAge","shipRepresentative","redirectToShipPanelFromButton","event","redirectToShipPanelFromDoubleClick","record","loading","margin","Group","placeholder","onChange","icon","SearchOutlined","rowSelection","onSelect","selected","selectedRows","dataSource","rowKey","onRow","rowIndex","onMouseEnter","currentTarget","cursor","onDoubleClick","disabled","ProfileOutlined","menuRef","createRef","routeActive","menuElement","menuElementWidth","setTimeout","MenuOutlined","HomeOutlined","AreaChartOutlined","OrderedListOutlined","LogoutOutlined","Predict","isPostingPrediction","nextPaintingDate","nextPaintingDiff","prediction","setPrediction","onFinish","values","Date","_d","getTime","dueDate","today","diff","diffTime","moment","days","toLocaleDateString","notification","description","placement","Item","suffix","QuestionCircleOutlined","rules","required","format","disabledDate","endOf","htmlType","CheckCircleOutlined","MapChart","coords","PortLongitudeDecimal","PortLatitudeDecimal","centroid","sumLat","sumLon","coordsCentroidPoint","center","geography","geoUrl","geographies","map","geo","rsmKey","IdMovement","coordinates","strokeLinecap","strokeLinejoin","movements","mmt","element","PortFrom","port","encodeURI","fetch","json","PortDestination","results","geometry","lat","lng","slice","MovementPanel","isFetchingShip","isFetchingMovements","movementsLength","fetchMovements","fetchShipData","err","parseMovements","Data","fontSize","paddingRight","padding","paddingLeft","maxHeight","overflowY","routeProps","path","exact","TableView","Login","submitLoginCredentials","callbackIfSuccess","logOut","autoComplete","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","App","component","AuthView","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b126ac0c.chunk.js","sourcesContent":["import { requests } from \"../agent\";\nimport { LoginRequest, LoginResponse, ValidateResponse } from \"./accountInterfaces\";\nimport { stringify } from \"querystring\";\n\nexport const AccountEndpoints = {\n    login: (loginRequest: LoginRequest): Promise<LoginResponse> =>\n        requests.post(\n            \"/login\",\n            stringify({\n                username: loginRequest.username,\n                password: loginRequest.password,\n            }),\n            {\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n            }\n        ),\n\n    validateSession: (): Promise<ValidateResponse> => {\n        const token = localStorage.getItem(\"token\");\n\n        return requests.get(\n            \"/api/ports\",\n            {},\n            {\n                params: {\n                    \"page-number\": 1,\n                    \"page-size\": 1,\n                },\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            }\n        );\n    },\n};\n","import { RootState } from \"./store\";\n\nexport function mapStateToProps(state: RootState) {\n    return state;\n}\n\nexport function mapDispatchToProps(state: any) {\n    return state;\n}\n\nexport function capitalizeEachWordInString(str: string) {\n    let splitStr = str.toLowerCase().split(\" \");\n    for (let i = 0; i < splitStr.length; i++) {\n\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(\" \");\n}\n\nexport type MapDispatchToPropsType = ReturnType<typeof mapDispatchToProps>;\nexport type MapStateToPropsType = ReturnType<typeof mapStateToProps>;\n","import { requests } from \"../agent\";\r\nimport {\r\n    GET_ARRAY_OF_SHIPS,\r\n    GET_SHIP_DETAILS,\r\n    GET_SHIP_ROUTES,\r\n    GET_SHIP_ROUTE,\r\n    ShipShortEntity,\r\n    ShipEntity,\r\n    ShipMovementArray,\r\n    ShipRoute,\r\n    IGetResponseShipsAll,\r\n    GET_SHIP_ROUTE_WEATHER,\r\n    ShipRouteWeather,\r\n    ShipAvgTimeInPort,\r\n    GET_SHIP_AVERAGE_TIME_IN_PORT,\r\n    IShipsFilterParams,\r\n} from \"./shipInterfaces\";\r\nimport Axios from \"axios\";\r\nimport { capitalizeEachWordInString } from \"App/redux\";\r\n\r\nexport const ShipEndpoints = {\r\n    getAllShips: (\r\n        pagination: { current: number; pageSize: number },\r\n        filter?: IShipsFilterParams\r\n    ): Promise<IGetResponseShipsAll> => {\r\n        let params: object = {\r\n            \"page-number\": pagination.current,\r\n            \"page-size\": pagination.pageSize,\r\n        };\r\n\r\n        if (filter) {\r\n            params = { ...filter, ...params };\r\n        }\r\n\r\n        return requests.get(\r\n            GET_ARRAY_OF_SHIPS,\r\n            {},\r\n            {\r\n                params,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                transformResponse: [].concat(Axios.defaults.transformResponse, (res: IGetResponseShipsAll) => {\r\n                    if (res.data && res.count) {\r\n                        for (let i = 0; i < res.data.length; i++) {\r\n                            res.data[i].shipName = capitalizeEachWordInString(res.data[i].shipName);\r\n                            res.data[i].shipType = res.data[i].shipType.toUpperCase();\r\n                        }\r\n                    }\r\n\r\n                    return res;\r\n                }),\r\n            }\r\n        );\r\n    },\r\n\r\n    getShipDetails: (shipID: number): Promise<ShipEntity> =>\r\n        requests.get(\r\n            GET_SHIP_DETAILS.replace(\"<ship_id>\", shipID.toString()),\r\n            {},\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                transformResponse: [].concat(Axios.defaults.transformResponse, (response: ShipEntity) => {\r\n                    response.ShipName = capitalizeEachWordInString(response.ShipName);\r\n                    response.ShipType = response.ShipType.toUpperCase();\r\n\r\n                    return response;\r\n                }),\r\n            }\r\n        ),\r\n    getShipAllRoutes: (\r\n        shipID: number,\r\n        pagination: { pageNumber: number; pageSize: number }\r\n    ): Promise<ShipMovementArray> =>\r\n        requests.get(\r\n            GET_SHIP_ROUTES.replace(\"<ship_id>\", shipID.toString()),\r\n            {},\r\n            {\r\n                params: {\r\n                    \"page-size\": pagination.pageSize,\r\n                    \"page-number\": pagination.pageNumber,\r\n                },\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }\r\n        ),\r\n    getShipRouteDetails: (shipID: string, routeID: string): Promise<ShipRoute> =>\r\n        requests.get(\r\n            GET_SHIP_ROUTE.replace(\"<ship_id>\", shipID).replace(\"<route_id>\", routeID),\r\n            {},\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }\r\n        ),\r\n    getShipRouteWeather: (shipID: string, routeID: string): Promise<ShipRouteWeather> =>\r\n        requests.get(GET_SHIP_ROUTE_WEATHER.replace(\"<ship_id>\", shipID).replace(\"<route_id>\", routeID), {}, {}),\r\n    getShipRouteAvgTimeSpentInPort: (shipID: string, portID: string): Promise<ShipAvgTimeInPort> =>\r\n        requests.get(GET_SHIP_AVERAGE_TIME_IN_PORT.replace(\"<ship_id>\", shipID).replace(\"<port_id>\", portID), {}, {}),\r\n};\r\n","export const GET_SHIP_DETAILS = \"/api/ships/<ship_id>\";\r\nexport interface ShipEntity {\r\n    ShipId: number;\r\n    ShipName: string;\r\n    ShipType: string;\r\n    Status: string;\r\n    VesselAge: number;\r\n    BuiltDate: Date;\r\n    DDLastDate: Date;\r\n    DDNextDate: Date;\r\n    ShipManager: string;\r\n    ShipOwner: string;\r\n    ShipBuilder: string;\r\n    CountryOrigin: string;\r\n    RegionOrigin: string;\r\n    TechnicalManager: string;\r\n    TechnicalManagerCountry: string;\r\n    TechnicalManagerRegion: string;\r\n    ShipOperator: string;\r\n    Active: boolean;\r\n    SalesRepresentative: string;\r\n}\r\n\r\nexport interface IGetResponseShipsAll {\r\n    count: number;\r\n    data: ShipShortEntity[];\r\n}\r\n\r\nexport const GET_ARRAY_OF_SHIPS = \"/api/ships\";\r\nexport type ShipShortEntity = {\r\n    shipId: number;\r\n    shipName: string;\r\n    shipType: string;\r\n    status: string;\r\n    vesselAge: number;\r\n    shipManager: string;\r\n    shipOwner: string;\r\n};\r\n\r\nexport const GET_SHIP_ROUTES = \"/api/ships/<ship_id>/movements\";\r\nexport type ShipMovementArray = [\r\n    {\r\n        IdMovement: string | number;\r\n        ShipName: string;\r\n        PortFrom: string;\r\n        CountryFrom: string;\r\n        PortDestination: string;\r\n        PortArrivalDate: Date;\r\n        SailDate: Date;\r\n        PortLongitudeDecimal: number;\r\n        PortLatitudeDecimal: number;\r\n    }\r\n];\r\n\r\nexport const GET_SHIP_ROUTE = \"/api/ships/<ship_id>/movements/<route_id>\";\r\nexport interface ShipRoute {\r\n    IdMovement: string | number;\r\n    ShipName: string;\r\n    PortFrom: string;\r\n    CountryFrom: string;\r\n    HoursInPort: number;\r\n    PortDestination: string;\r\n    PortArrivalDate: Date;\r\n    SailDate: Date;\r\n    PortLongitudeDecimal: number;\r\n    PortLatitudeDecimal: number;\r\n    LastPortofCallArrivalDate: string;\r\n    LastPortofCallCountry: string;\r\n    LastPortofCallName: string;\r\n    LastPortofCallSailDate: string;\r\n}\r\n\r\nexport const GET_SHIP_ROUTE_WEATHER = \"/api/ships/<ship_id>/movements/<route_id>/weather\";\r\nexport interface ShipRouteWeather {\r\n    AirTemperature: number | null;\r\n    CloudAmount: number | null;\r\n    CloudHeight: number | null;\r\n    IdMovement: string;\r\n    SeaLevelPressure: number | null;\r\n    SeaSurfaceTemperature: number | null;\r\n    Visibility: number | null;\r\n    WaveHeight: number | null;\r\n    WavePeriod: number | null;\r\n    WetBulbTemperature: number | null;\r\n    WindDirection: number | null;\r\n    WindSpeed: number | null;\r\n}\r\n\r\nexport const GET_SHIP_AVERAGE_TIME_IN_PORT = \"/api/ships/<ship_id>/port_time/<port_id>\";\r\nexport interface ShipAvgTimeInPort {\r\n    AverageTime: number;\r\n}\r\n\r\nexport interface ResponseError {\r\n    description: string;\r\n    error: string;\r\n    status_code: number;\r\n}\r\n\r\nexport interface IShipsFilterParams {\r\n    \"ship-id\"?: number;\r\n    \"ship-name\"?: string;\r\n    \"ship-type\"?: string;\r\n    status?: string;\r\n    \"ship-manager\"?: string;\r\n    \"ship-owner\"?: string;\r\n    \"vessel-age\"?: number;\r\n    \"sales-rep\"?: string;\r\n}\r\n","import { requests } from \"../agent\";\r\nimport { GET_PAINTS_STATISTICS_MOST_USED, IMostUsedPaintsResponse } from \"./PaintsInterface\";\r\n\r\nexport const PaintsEndpoints = {\r\n    getMostUsedPaints: (): Promise<IMostUsedPaintsResponse> => requests.get(GET_PAINTS_STATISTICS_MOST_USED, {}, {}),\r\n};\r\n","export const GET_PAINTS_STATISTICS_MOST_USED = \"/api/paints/statistics/most-used\";\r\n\r\nexport type IMostUsedPaintsResponse = [\r\n    {\r\n        product: string;\r\n        quantity: number;\r\n    }\r\n];\r\n\r\nexport type IMostUsedPaintsError = {\r\n    description: \"Request does not contain an access token\";\r\n    error: \"Authorization Required\";\r\n    status_code: 401;\r\n};\r\n","import { requests } from \"../agent\";\r\nimport {\r\n    ISalesRepStatisticsPaintsResponse,\r\n    GET_SALES_REP_STATISTICS_PAINTS,\r\n    ISalesRepHistoryOfPaintsResponse,\r\n    GET_SALES_REP_HISTORY_OF_PAINTS,\r\n} from \"./salesRepInterfaces\";\r\n\r\nexport const SalesRepEndpoints = {\r\n    getSalesRepPaintsStatistics: (): Promise<ISalesRepStatisticsPaintsResponse> =>\r\n        requests.get(GET_SALES_REP_STATISTICS_PAINTS, {}, {}),\r\n\r\n    getSalesRepHistoryOfPaints: (salesRepId: number): Promise<ISalesRepHistoryOfPaintsResponse> =>\r\n        requests.get(GET_SALES_REP_HISTORY_OF_PAINTS.replace(\"<sales_rep_id>\", salesRepId.toString()), {}, {}),\r\n};\r\n","export const GET_SALES_REP_STATISTICS_PAINTS = \"/api/sales-representatives/statistics/paints\";\r\nexport type ISalesRepStatisticsPaintsResponse = [\r\n    {\r\n        count: number;\r\n        sales_rep: string;\r\n    }\r\n];\r\n\r\nexport interface ISalesRepStatisticsPaintsError {\r\n    description: string;\r\n    error: string;\r\n    status_code: number;\r\n}\r\n\r\nexport const GET_SALES_REP_HISTORY_OF_PAINTS = \"/api/sales-representatives/<sales_rep_id>/history/paints\";\r\nexport interface ISalesRepHistoryOfPaintsResponse {\r\n    data: ISalesRepHistoryOfPaintsDataObject[];\r\n    name: string;\r\n}\r\n\r\nexport interface ISalesRepHistoryOfPaintsDataObject {\r\n    count: number;\r\n    date: string;\r\n}\r\n","import { IModelPredictionResponse, POST_MODEL_PREDICTION, IModelPredictionRequest } from \"./modelInterface\";\r\nimport { requests } from \"../agent\";\r\n\r\nexport const ModelEndpoints = {\r\n    postModelPrediction: (modelValues: IModelPredictionRequest): Promise<IModelPredictionResponse> => {\r\n        console.log(modelValues);\r\n        return requests.post(\r\n            POST_MODEL_PREDICTION,\r\n            {\r\n                lastPaintingDate: modelValues.lastPaintingDate,\r\n                ppgmcTechnicalmanager: modelValues.ppgmcTechnicalmanager || \"Gozo Channel Co Ltd\",\r\n                salesRep: modelValues.salesRep || \"#PPGMarine\",\r\n                shipBuilder: modelValues.shipBuilder || \"PURDON & FEATHERSTONE\",\r\n                shipType: modelValues.shipType || null,\r\n                shipyardCountry: modelValues.shipyardCountry || \"Netherlands\",\r\n                shipyardRegion: modelValues.shipyardRegion || \"None\",\r\n                status: modelValues.status || \"IN SERVICE/COMMISSION\",\r\n                techmngCountry: modelValues.techmngCountry || \"Malta\",\r\n                techmngRegion: modelValues.techmngRegion || \"USCA\",\r\n                vesselAge: modelValues.vesselAge || 108.1,\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }\r\n        );\r\n    },\r\n};\r\n","export const POST_MODEL_PREDICTION = \"/api/model/predict\";\r\n\r\nexport interface IModelPredictionRequest {\r\n    lastPaintingDate: number;\r\n    ppgmcTechnicalmanager: string;\r\n    salesRep: string;\r\n    shipBuilder: string;\r\n    shipType: string;\r\n    shipyardCountry: string;\r\n    shipyardRegion: string;\r\n    status: string;\r\n    techmngCountry: string;\r\n    techmngRegion: string;\r\n    vesselAge: number;\r\n}\r\n\r\nexport interface IModelPredictionResponse {\r\n    nextPaintingDate: number;\r\n}\r\n","// import { User } from \"App/api/agent\";\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\nimport { AccountEndpoints } from \"./account/accountEndpoints\";\nimport { ShipEndpoints } from \"./ships/shipEnpoints\";\nimport { PortsEndpoints } from \"./ports/portsEnpoints\";\nimport { devalidateSession, validateSession } from \"App/redux/reducers/sessionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { PaintsEndpoints } from \"./paints/PaintsEndpoints\";\nimport { SalesRepEndpoints } from \"./salesRepresentatives/salesRepEndpoints\";\nimport { ModelEndpoints } from \"./model/modelEnpoints\";\n\ninterface AxiosError {\n    code: number;\n    columnNumber: number;\n    config: {\n        url: string;\n        method: string;\n        data: string;\n        headers: object;\n        baseURL: string;\n    };\n    description: string;\n    fileName: string;\n    lineNumber: number;\n    message: string;\n    name: string;\n    number: number;\n    stack: string;\n    response: any;\n}\n\n// axios.defaults.baseURL = `${CONFIG.server.url}:${CONFIG.server.port}/api/`;\naxios.defaults.baseURL = `http://localhost:5000/`;\n\naxios.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem(\"token\");\n        if (token) config.headers.Authorization = `Bearer ${token}`;\n        if (!config.headers[\"Content-Type\"] || config.headers[\"Content-Type\"] === \"\")\n            config.headers[\"Content-Type\"] = \"application/json\";\n\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\naxios.interceptors.response.use(undefined, (error: AxiosError) => {\n    if (error.message === \"Network Error\" && !error.response) {\n        console.error(\"Błąd sieci. Czy api działa?\");\n    }\n    const { status, headers, data } = error.response || {};\n    if (status === 404) {\n        // redirect to 404 view by using redux and component lisener in ProtectedRoutenode_m\n        console.log(\"404: \" + error.response);\n    }\n\n    if (status === 403) {\n        console.log(\"403: \" + error.response);\n    }\n\n    if (status === 401) {\n        if (data.error === \"Invalid token\") {\n            console.log(\"TOKEN EXPIRED\");\n\n            const dispatch = useDispatch();\n            dispatch<any>(\n                validateSession(\n                    () => {},\n                    () => false\n                )\n            );\n        }\n\n        return;\n    }\n\n    if (status === 400) {\n        console.log(`400: ${error.response}`);\n    }\n\n    if (status === 500) {\n        console.log(error.response);\n        console.log(`500: ${error.response.data}`);\n    }\n\n    return error;\n});\n\nconst responseBody = (response: AxiosResponse) => {\n    if (response && response.config && response.config.url === \"/login\") {\n        return { headers: response.headers, ...response.data };\n    }\n    return response.data;\n};\n\nexport const requests = {\n    get: (url: string, body?: {}, config?: AxiosRequestConfig | undefined) =>\n        axios.get(url, { ...config, data: body }).then(responseBody),\n    post: (url: string, body: {}, config?: AxiosRequestConfig | undefined) =>\n        axios.post(url, body, config).then(responseBody),\n    put: (url: string, body: {}, config?: AxiosRequestConfig | undefined) =>\n        axios.put(url, body, config).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n};\n\nexport default {\n    Users: AccountEndpoints,\n    Ships: ShipEndpoints,\n    Ports: PortsEndpoints,\n    Paints: PaintsEndpoints,\n    SalesRep: SalesRepEndpoints,\n    Models: ModelEndpoints,\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../store\";\nimport agent from \"App/api/agent\";\nimport {\n    LoginRequest,\n    LoginResponse,\n    ErrorMessage,\n    ValidateResponse,\n} from \"App/api/account/accountInterfaces\";\nimport { AxiosResponse } from \"axios\";\n\ninterface SessionState {\n    info: string | null;\n    loadingLogin: boolean;\n    isFetchingValidation: boolean;\n    error: string | null | undefined;\n}\n\ninterface AxiosResponseToState {\n    data: ErrorMessage | undefined;\n    status: number;\n    statusText: string;\n    headers: any;\n}\n\nconst initialState: SessionState = {\n    loadingLogin: false,\n    isFetchingValidation: false,\n    info: null,\n    error: null,\n};\n\nfunction startLoading(state: SessionState) {\n    state.loadingLogin = true;\n    state.error = null;\n}\n\nfunction loadingFailed(state: SessionState, action: PayloadAction<any>) {\n    state.loadingLogin = false;\n    state.error = action.payload;\n}\n\nexport const sessionSlice = createSlice({\n    name: \"session\",\n    initialState,\n    reducers: {\n        authenticationStart: startLoading,\n        authenticationSuccess: (state: SessionState, action: PayloadAction<LoginResponse>) => {\n            state.loadingLogin = false;\n            state.info = action.payload.headers[\"jwt-token\"];\n            state.error = null;\n\n            localStorage.setItem(\"token\", action.payload.headers[\"jwt-token\"]);\n        },\n        authenticationFailure: loadingFailed,\n        devalidateSession: (state: SessionState) => {\n            state.loadingLogin = false;\n            state.error = null;\n            state.info = null;\n\n            localStorage.removeItem(\"token\");\n        },\n        validationStart: (state: SessionState) => {\n            state.isFetchingValidation = true;\n            state.error = null;\n        },\n        validationSuccess: (state: SessionState) => {\n            state.isFetchingValidation = false;\n            state.info = localStorage.getItem(\"token\");\n        },\n        validationFailure: (state: SessionState, action: PayloadAction<AxiosResponseToState>) => {\n            state.isFetchingValidation = false;\n            state.error = action.payload.data?.message;\n        },\n    },\n});\n\nexport const {\n    authenticationStart,\n    authenticationSuccess,\n    authenticationFailure,\n    devalidateSession,\n    validationStart,\n    validationSuccess,\n    validationFailure,\n} = sessionSlice.actions;\n\nexport const authenticateUser = (\n    payload: LoginRequest,\n    callbackIfSuccess: () => void\n): AppThunk => async (dispatch) => {\n    dispatch(authenticationStart());\n    agent.Users.login(payload)\n        .then((response: LoginResponse) => {\n            dispatch(authenticationSuccess(response));\n            callbackIfSuccess();\n        })\n        .catch((error: AxiosResponse) => {\n            dispatch(authenticationFailure(error));\n        });\n};\n\nexport const validateSession = (\n    setStateCallback: (value: boolean) => void,\n    isMounted: () => boolean\n): AppThunk => async (dispatch) => {\n    dispatch(validationStart());\n    agent.Users.validateSession()\n        .then((response: ValidateResponse) => {\n            dispatch(validationSuccess());\n            if (isMounted()) {\n                setStateCallback(false);\n            }\n        })\n        .catch((error: AxiosResponse) => {\n            dispatch(validationFailure(error));\n            if (isMounted()) {\n                setStateCallback(false);\n            }\n        });\n};\n\nexport const sessionReducer = sessionSlice.reducer;\nexport const sessionActions = sessionSlice.actions;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk } from \"../store\";\r\nimport agent from \"App/api/agent\";\r\nimport { LoginRequest, LoginResponse, ErrorMessage, ValidateResponse } from \"App/api/account/accountInterfaces\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport {\r\n    ShipShortEntity,\r\n    ShipEntity,\r\n    ResponseError,\r\n    IGetResponseShipsAll,\r\n    IShipsFilterParams,\r\n} from \"App/api/ships/shipInterfaces\";\r\nimport { capitalizeEachWordInString } from \"..\";\r\n\r\nexport interface IPagination {\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n    previous?: number;\r\n}\r\n\r\ninterface ShipsState {\r\n    isFetchingData: boolean;\r\n    ships: ShipShortEntity[] | null;\r\n    error: string | null;\r\n    selectedShip: {\r\n        id: number | null;\r\n        isFetchingData: boolean;\r\n        info: ShipEntity | null;\r\n        error: ResponseError | null;\r\n    };\r\n    pagination: IPagination;\r\n}\r\n\r\nconst initialState: ShipsState = {\r\n    isFetchingData: false,\r\n    ships: null,\r\n    error: null,\r\n    selectedShip: {\r\n        id: null,\r\n        isFetchingData: false,\r\n        error: null,\r\n        info: null,\r\n    },\r\n    pagination: {\r\n        previous: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 1000,\r\n    },\r\n};\r\n\r\nexport const shipsSlice = createSlice({\r\n    name: \"ships\",\r\n    initialState,\r\n    reducers: {\r\n        fetchingShipsStart: (state: ShipsState, action: PayloadAction<IPagination>) => {\r\n            state.isFetchingData = true;\r\n            state.error = null;\r\n            state.ships = null;\r\n            state.pagination.previous = state.pagination.current;\r\n            state.pagination.current = action.payload.current;\r\n            state.pagination.pageSize = action.payload.pageSize;\r\n        },\r\n        fetchingShipsSuccess: (state: ShipsState, action: PayloadAction<IGetResponseShipsAll>) => {\r\n            state.isFetchingData = false;\r\n            let data: ShipShortEntity[] = [];\r\n            for (let i = 0; i < state.pagination.pageSize; i++) {\r\n                action.payload.data[0].vesselAge = i + 1;\r\n                data.push(action.payload.data[0]);\r\n            }\r\n            state.ships = data;\r\n            state.pagination.total = action.payload.count * 100;\r\n        },\r\n        fetchingShipsFailed: (state: ShipsState, action: PayloadAction<string>) => {\r\n            state.isFetchingData = false;\r\n            state.error = action.payload;\r\n            state.pagination.current = state.pagination.previous;\r\n        },\r\n        setSelectedShip: (state: ShipsState, action: PayloadAction<number>) => {\r\n            state.selectedShip.id = action.payload;\r\n            if (state.selectedShip.info && state.selectedShip.info.ShipId !== action.payload) {\r\n                state.selectedShip.info = null;\r\n            }\r\n        },\r\n\r\n        shipDetailsStart: (state: ShipsState) => {\r\n            state.selectedShip.isFetchingData = true;\r\n            state.selectedShip.error = null;\r\n            state.selectedShip.info = null;\r\n        },\r\n        shipDetailsSuccess: (state: ShipsState, action: PayloadAction<ShipEntity>) => {\r\n            state.selectedShip.error = null;\r\n            state.selectedShip.isFetchingData = false;\r\n            state.selectedShip.id = action.payload.ShipId;\r\n            state.selectedShip.info = action.payload;\r\n        },\r\n        shipDetailsFailure: (state: ShipsState, action?: PayloadAction<ResponseError>) => {\r\n            state.selectedShip.isFetchingData = false;\r\n            state.selectedShip.error = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    fetchingShipsStart,\r\n    fetchingShipsFailed,\r\n    fetchingShipsSuccess,\r\n    setSelectedShip,\r\n    shipDetailsStart,\r\n    shipDetailsSuccess,\r\n    shipDetailsFailure,\r\n} = shipsSlice.actions;\r\n\r\nexport const fetchShips = (pagination: IPagination, filter?: IShipsFilterParams): AppThunk => async (dispatch) => {\r\n    dispatch(fetchingShipsStart(pagination));\r\n    agent.Ships.getAllShips(pagination, filter)\r\n        .then((response: IGetResponseShipsAll) => {\r\n            dispatch(fetchingShipsSuccess(response));\r\n        })\r\n        .catch((error: { message: string; statusText: string }) => {\r\n            console.log(error.message);\r\n            dispatch(fetchingShipsFailed(error.statusText));\r\n        });\r\n};\r\n\r\nexport const fetchShipDetails = (shipId: number): AppThunk => async (dispatch) => {\r\n    dispatch(shipDetailsStart());\r\n    agent.Ships.getShipDetails(shipId)\r\n        .then((response: ShipEntity) => {\r\n            dispatch(shipDetailsSuccess(response));\r\n        })\r\n        .catch((error: AxiosResponse) => {\r\n            console.log(error);\r\n            dispatch(shipDetailsFailure());\r\n        });\r\n};\r\n\r\nexport const sessionReducer = shipsSlice.reducer;\r\nexport const sessionActions = shipsSlice.actions;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport { sessionSlice } from \"./sessionSlice\";\r\nimport { shipsSlice } from \"./shipsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    session: sessionSlice.reducer,\r\n    ships: shipsSlice.reducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type ShipState = ReturnType<typeof shipsSlice.reducer>;\r\nexport default rootReducer;\r\n","import { configureStore, Action } from '@reduxjs/toolkit';\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\nimport rootReducer, {\r\n\tRootState as RootReducerState\r\n} from './reducers/rootReducer';\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer\r\n});\r\n\r\n// TODO module.hot\r\n// if (process.env.NODE_ENV === 'development' && module.hot) {\r\n//   module.hot.accept('../reducers/rootReducer', () => {\r\n//     const newRootReducer = require('../reducers/rootReducer').default\r\n//     store.replaceReducer(newRootReducer)\r\n//   })\r\n// }\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\r\nexport type RootState = RootReducerState;\r\nexport default store;\r\n","import React, { CSSProperties } from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nexport declare type ContainerType = \"screen\" | \"fill\";\r\n\r\ninterface ILoaderScreenProps {\r\n    container?: ContainerType;\r\n}\r\nexport default function LoadingScreen(props: ILoaderScreenProps) {\r\n    let style: CSSProperties = {};\r\n\r\n    if (props.container === \"screen\") {\r\n        style = {\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 999,\r\n        };\r\n    }\r\n    if (props.container === \"fill\") {\r\n        style = {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"inherit\",\r\n            overflow: \"hidden\",\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"overlay\" style={style}>\r\n            <Spin size=\"large\" />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { connect, DispatchProp } from \"react-redux\";\nimport { Route, Redirect, RouteComponentProps } from \"react-router-dom\";\n\nimport LoadingScreen from \"./LoaderScreen\";\nimport { RootState } from \"App/redux/reducers/rootReducer\";\nimport { Roles } from \"App/api/account/accountInterfaces\";\nimport { validateSession } from \"App/redux/reducers/sessionSlice\";\nimport { mapStateToProps } from \"App/redux\";\n\ninterface ProtectedRouteState {\n    isLoading: boolean;\n    isUserAuthorized: boolean;\n    isUserAuthenticated: boolean;\n}\n\ninterface OwnProps {\n    Component: React.FC<any> | React.ComponentType<any>;\n    path: string;\n    exact?: boolean;\n    acceptedRoles?: Roles[];\n}\n\ntype ProtectedRouteProps = OwnProps & DispatchProp & RootState & RouteComponentProps;\n\ntype LoadingCallback = () => void;\n\nclass ProtectedRoute extends React.Component<ProtectedRouteProps, ProtectedRouteState> {\n    _isMounted = false;\n\n    constructor(props: ProtectedRouteProps) {\n        super(props);\n\n        this.state = {\n            isLoading: !props.session.info,\n            isUserAuthenticated: true,\n            isUserAuthorized: true,\n        };\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n\n        if (!this.props.session.info) {\n            let setStateIsLoading = (value: boolean) => {\n                this.setState({\n                    isLoading: value,\n                });\n            };\n            let isMounted = (): boolean => this._isMounted;\n\n            this.props.dispatch<any>(validateSession(setStateIsLoading, isMounted));\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        const { Component, session, ...rest } = this.props;\n        return (\n            <Route\n                {...rest}\n                render={(props) => {\n                    if (this.state.isLoading || this.props.session.loadingLogin) {\n                        return <LoadingScreen />;\n                    } else if (session.info) {\n                        return <Component {...this.props} {...props} />;\n                    } else {\n                        return (\n                            <Redirect\n                                to={{\n                                    pathname: \"/\",\n                                    state: this.props.location,\n                                }}\n                            />\n                        );\n                    }\n                }}\n            />\n        );\n    }\n}\n\nexport default connect<RootState, DispatchProp, OwnProps>(mapStateToProps)(ProtectedRoute);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group_12\",\n  \"data-name\": \"Group 12\",\n  transform: \"translate(-629 -164.815)\",\n  opacity: 0.72\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_37\",\n  \"data-name\": \"Rectangle 37\",\n  transform: \"translate(651 242.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 79,\n  height: 20,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 78,\n  height: 19,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_38\",\n  \"data-name\": \"Rectangle 38\",\n  transform: \"translate(759 195.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 64,\n  height: 24,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 63,\n  height: 23,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_43\",\n  \"data-name\": \"Rectangle 43\",\n  transform: \"translate(823 195.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 63,\n  height: 24,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 62,\n  height: 23,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_46\",\n  \"data-name\": \"Rectangle 46\",\n  transform: \"translate(886 195.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 65,\n  height: 24,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 64,\n  height: 23,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_39\",\n  \"data-name\": \"Rectangle 39\",\n  transform: \"translate(759 219.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 64,\n  height: 22,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 63,\n  height: 21,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_42\",\n  \"data-name\": \"Rectangle 42\",\n  transform: \"translate(823 219.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 63,\n  height: 22,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 62,\n  height: 21,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_45\",\n  \"data-name\": \"Rectangle 45\",\n  transform: \"translate(886 219.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 65,\n  height: 22,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 64,\n  height: 21,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_40\",\n  \"data-name\": \"Rectangle 40\",\n  transform: \"translate(759 241.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 64,\n  height: 21,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 63,\n  height: 20,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_41\",\n  \"data-name\": \"Rectangle 41\",\n  transform: \"translate(823 241.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 63,\n  height: 21,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 62,\n  height: 20,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_44\",\n  \"data-name\": \"Rectangle 44\",\n  transform: \"translate(886 241.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 65,\n  height: 21,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 64,\n  height: 20,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Union_2\",\n  \"data-name\": \"Union 2\",\n  transform: \"translate(629 253.815)\",\n  fill: \"#bcb6b6\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 359.5 48.5004997253418 L 11.99969959259033 48.5004997253418 C 8.928299903869629 48.5004997253418 6.040550231933594 47.30424880981445 3.868400096893311 45.13209915161133 C 1.696249961853027 42.9599494934082 0.5 40.07220077514648 0.5 37.00080108642578 L 0.5 8.339900016784668 L 314.4609069824219 8.339900016784668 L 314.8331909179688 8.339900016784668 L 314.9399108886719 7.983249664306641 C 315.5739440917969 5.864649772644043 316.9002380371094 3.959299802780151 318.6744995117188 2.618149757385254 C 320.5076904296875 1.232449889183044 322.6950073242188 0.4999998509883881 324.9999084472656 0.4999998509883881 L 395.5 0.4999998509883881 L 395.5 23.23979949951172 C 395.5 26.84614944458008 394.0958557128906 30.2364501953125 391.5462036132813 32.78625106811523 C 388.9965515136719 35.33599853515625 385.6065368652344 36.74020004272461 382.0005493164063 36.74020004272461 L 365.2025146484375 36.74020004272461 L 365.0612487792969 36.74020004272461 L 364.9408569335938 36.8140983581543 C 362.7861938476563 38.13719940185547 361.4997863769531 40.25025177001953 361.4997863769531 42.46649932861328 C 361.4997863769531 45.02919387817383 363.1374206542969 47.27002716064453 365.6121215820313 48.49959945678711 L 360 48.49959945678711 L 359.5 48.49959945678711 L 359.5 48.5004997253418 Z\",\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 359 48.0004997253418 L 359 47.99959945678711 L 360 47.99959945678711 L 363.8755187988281 47.99959945678711 C 362.1014709472656 46.62381744384766 360.9997863769531 44.65486145019531 360.9997863769531 42.46649932861328 C 360.9997863769531 40.07509994506836 362.3753051757813 37.80274963378906 364.6792602539063 36.3880500793457 L 364.9200134277344 36.24020004272461 L 365.2025146484375 36.24020004272461 L 382.0005493164063 36.24020004272461 C 385.4729614257813 36.24020004272461 388.7374572753906 34.88800048828125 391.1925964355469 32.43270111083984 C 393.6478576660156 29.97735023498535 395 26.71260070800781 395 23.23979949951172 L 395 0.9999998807907104 L 324.9999084472656 0.9999998807907104 C 322.8046875 0.9999998807907104 320.7216491699219 1.697499871253967 318.9760131835938 3.017049789428711 C 317.2859497070313 4.29449987411499 316.022705078125 6.109149932861328 315.4189147949219 8.12660026550293 L 315.2054443359375 8.839900016784668 L 314.4609069824219 8.839900016784668 L 1 8.839900016784668 L 1 37.00080108642578 C 1 43.0660514831543 5.934450149536133 48.0004997253418 11.99969959259033 48.0004997253418 L 359 48.0004997253418 M 360 49.0004997253418 L 11.99969959259033 49.0004997253418 C 5.373000144958496 49.0004997253418 0 43.62749862670898 0 37.00080108642578 L 0 7.839900016784668 L 314.4609069824219 7.839900016784668 C 315.818115234375 3.304799795150757 320.0228881835938 -1.373290956507844e-07 324.9999084472656 -1.373290956507844e-07 L 396 -1.373290956507844e-07 L 396 23.23979949951172 C 396 30.97259902954102 389.7324523925781 37.24020004272461 382.0005493164063 37.24020004272461 L 365.2025146484375 37.24020004272461 C 363.2591552734375 38.43349838256836 361.9997863769531 40.33214950561523 361.9997863769531 42.46649932861328 C 361.9997863769531 45.98640060424805 365.3729858398438 48.85469818115234 369.6786499023438 48.99509811401367 L 369.6786499023438 48.99959945678711 L 360 48.99959945678711 L 360 49.0004997253418 Z M 372.0006103515625 48.99959945678711 L 371.9988098144531 48.99959945678711 L 370.1430053710938 48.99959945678711 C 370.7658081054688 48.98970031738281 371.3904113769531 48.92219924926758 372.0006103515625 48.79349899291992 L 372.0006103515625 48.99779891967773 L 372.0006103515625 48.99959945678711 Z\",\n  stroke: \"none\",\n  fill: \"#707070\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_32\",\n  \"data-name\": \"Rectangle 32\",\n  transform: \"translate(652 301.815)\",\n  fill: \"#c5c5c5\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0,0H359a5,5,0,0,1,5,5v6a5,5,0,0,1-5,5H8A8,8,0,0,1,0,8V0A0,0,0,0,1,0,0Z\",\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1,.5H359A4.5,4.5,0,0,1,363.5,5v6a4.5,4.5,0,0,1-4.5,4.5H8A7.5,7.5,0,0,1,.5,8V1A.5.5,0,0,1,1,.5Z\",\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_33\",\n  \"data-name\": \"Rectangle 33\",\n  transform: \"translate(663 187.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4,0H66a4,4,0,0,1,4,4V46a0,0,0,0,1,0,0H0a0,0,0,0,1,0,0V4A4,4,0,0,1,4,0Z\",\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4,.5H66A3.5,3.5,0,0,1,69.5,4V45a.5.5,0,0,1-.5.5H1A.5.5,0,0,1,.5,45V4A3.5,3.5,0,0,1,4,.5Z\",\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_34\",\n  \"data-name\": \"Rectangle 34\",\n  transform: \"translate(671 164.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 27,\n  height: 25,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 26,\n  height: 24,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_35\",\n  \"data-name\": \"Rectangle 35\",\n  transform: \"translate(665 171.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 39,\n  height: 10,\n  rx: 3,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 38,\n  height: 9,\n  rx: 2.5,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_36\",\n  \"data-name\": \"Rectangle 36\",\n  transform: \"translate(636 232.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0,0H98a3,3,0,0,1,3,3v7a4,4,0,0,1-4,4H5A5,5,0,0,1,0,9V0A0,0,0,0,1,0,0Z\",\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1,.5H98A2.5,2.5,0,0,1,100.5,3v7A3.5,3.5,0,0,1,97,13.5H5A4.5,4.5,0,0,1,.5,9V1A.5.5,0,0,1,1,.5Z\",\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ellipse_3\",\n  \"data-name\": \"Ellipse 3\",\n  transform: \"translate(662 249.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 4,\n  cy: 4,\n  r: 4,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 4,\n  cy: 4,\n  r: 3.5,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ellipse_7\",\n  \"data-name\": \"Ellipse 7\",\n  transform: \"translate(1009 259.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 0.5\n}, /*#__PURE__*/React.createElement(\"ellipse\", {\n  cx: 2.5,\n  cy: 3,\n  rx: 2.5,\n  ry: 3,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  cx: 2.5,\n  cy: 3,\n  rx: 2.25,\n  ry: 2.75,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ellipse_4\",\n  \"data-name\": \"Ellipse 4\",\n  transform: \"translate(677 249.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"ellipse\", {\n  cx: 4.5,\n  cy: 4,\n  rx: 4.5,\n  ry: 4,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  cx: 4.5,\n  cy: 4,\n  rx: 4,\n  ry: 3.5,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ellipse_5\",\n  \"data-name\": \"Ellipse 5\",\n  transform: \"translate(695 249.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"ellipse\", {\n  cx: 4.5,\n  cy: 4,\n  rx: 4.5,\n  ry: 4,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"ellipse\", {\n  cx: 4.5,\n  cy: 4,\n  rx: 4,\n  ry: 3.5,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ellipse_6\",\n  \"data-name\": \"Ellipse 6\",\n  transform: \"translate(711 249.815)\",\n  fill: \"#dedede\",\n  stroke: \"#707070\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 4,\n  cy: 4,\n  r: 4,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 4,\n  cy: 4,\n  r: 3.5,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_47\",\n  \"data-name\": \"Rectangle 47\",\n  transform: \"translate(671 200.815)\",\n  fill: \"none\",\n  stroke: \"#6b6b6b\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4,0H16a4,4,0,0,1,4,4V21a0,0,0,0,1,0,0H0a0,0,0,0,1,0,0V4A4,4,0,0,1,4,0Z\",\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4,.5H16A3.5,3.5,0,0,1,19.5,4V20a.5.5,0,0,1-.5.5H1A.5.5,0,0,1,.5,20V4A3.5,3.5,0,0,1,4,.5Z\",\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_48\",\n  \"data-name\": \"Rectangle 48\",\n  transform: \"translate(695 193.815)\",\n  fill: \"none\",\n  stroke: \"#6b6b6b\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 15,\n  height: 7,\n  rx: 2,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 14,\n  height: 6,\n  rx: 1.5,\n  fill: \"none\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangle_49\",\n  \"data-name\": \"Rectangle 49\",\n  transform: \"translate(713 193.815)\",\n  fill: \"none\",\n  stroke: \"#6b6b6b\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 14,\n  height: 7,\n  rx: 2,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 13,\n  height: 6,\n  rx: 1.5,\n  fill: \"none\"\n})));\n\nvar SvgVessel = function SvgVessel(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 396,\n    height: 153,\n    viewBox: \"0 0 396 153\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgVessel, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/vessel.d0af96dc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { ReactComponent as Logo } from \"../../../../../assets/vessel.svg\";\r\nimport { connect, DispatchProp } from \"react-redux\";\r\nimport { RouteChildrenProps, RouteComponentProps } from \"react-router\";\r\nimport { mapStateToProps } from \"App/redux\";\r\nimport { ShipState, RootState } from \"App/redux/reducers/rootReducer\";\r\nimport { shipDetailsStart, fetchShipDetails } from \"App/redux/reducers/shipsReducer\";\r\nimport LoadingScreen from \"App/shared/components/LoaderScreen\";\r\nimport agent from \"App/api/agent\";\r\nimport { Form, Row, Col, Input, Button, Tooltip, DatePicker, notification, Divider, Card } from \"antd\";\r\n\r\nimport \"./ShipPanel.css\";\r\n\r\ninterface IOwnProps {}\r\n\r\ninterface IShipState {\r\n    shipId: number;\r\n}\r\n\r\ninterface IRouteParams {\r\n    ship_id: string;\r\n}\r\n\r\ntype IShipProps = IOwnProps & RouteComponentProps<IRouteParams> & ShipState & DispatchProp;\r\n\r\nclass ShipPanel extends React.Component<IShipProps, IShipState> {\r\n    constructor(props: IShipProps) {\r\n        super(props);\r\n        this.state = {\r\n            shipId: Number.parseInt(props.match.params.ship_id),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ship = this.props.selectedShip;\r\n\r\n        if (this.state.shipId !== ship.id || !ship.info) {\r\n            this.props.dispatch<any>(fetchShipDetails(this.state.shipId));\r\n        }\r\n    }\r\n\r\n    redirectToMovementsPanel() {\r\n        this.props.history.push(`${this.state.shipId}/movements`);\r\n    }\r\n\r\n    public render() {\r\n        const ship = this.props.selectedShip;\r\n        console.log(ship);\r\n\r\n        // check if data fetching has completed and info object is not null\r\n        if (this.state.shipId === ship.id && !!ship.info && !ship.isFetchingData) {\r\n            return (\r\n                <Row justify=\"space-between\" gutter={32} align=\"stretch\" style={{ height: \"100%\" }}>\r\n                    {/* Top left panel */}\r\n                    <Col xl={12} sm={24}>\r\n                        <div className=\"ship-container__box\">\r\n                            <Row>\r\n                                {/* General ship status */}\r\n                                <Col xl={12} lg={12} md={24} sm={24} xs={24} span={8}>\r\n                                    <h1 className=\"customH3tag\">{this.props.selectedShip.info.ShipName}</h1>\r\n                                    <h3 className=\"customPtag\" style={{ marginTop: \"-0.5em\", fontWeight: 400 }}>\r\n                                        SHIP NAME\r\n                                    </h3>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.ShipId}</h3>\r\n                                    <p className=\"customPtag\">SHIP ID</p>\r\n                                </Col>\r\n\r\n                                {/* Ship graphic and button to view movements details */}\r\n                                <Col xl={12} lg={12} md={24} sm={24} xs={24} span={8} className=\"shipImageBlock\">\r\n                                    <Logo className=\"box__ship-image\" />\r\n                                </Col>\r\n\r\n                                {/* Dodać switcha w zaleznosci od rodzaju inna grafika */}\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xl={12} lg={12} md={24} sm={24} xs={24} span={8}>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.ShipType}</h3>\r\n                                    <p className=\"customPtag\">SHIP TYPE</p>\r\n                                </Col>\r\n                                <Col xl={12} lg={12} md={24} sm={24} xs={24} span={8}>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.Status}</h3>\r\n                                    <p className=\"customPtag\">STATUS</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xl={24} lg={24} md={24} sm={24} xs={24} span={0}>\r\n                                    {/* <Card title=\"NEXT DRY DOCK DATE\" extra={<a href=\"#\">PREDICTION SCREEN</a>}>\r\n                                    <h3>{this.props.selectedShip.info.DDNextDate}</h3>\r\n                                </Card> */}\r\n                                    <Card\r\n                                        style={{ marginTop: 0 }}\r\n                                        bodyStyle={{ paddingTop: 2, paddingBottom: 2 }}\r\n                                        headStyle={{ height: 38 }}\r\n                                        type=\"inner\"\r\n                                        title=\"NEXT DRY DOCK DATE\"\r\n                                        extra={<a href=\"/auth/predict\">PREDICTION SCREEN</a>}\r\n                                    >\r\n                                        <h3>{this.props.selectedShip.info.DDNextDate}</h3>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {/* Top right panel */}\r\n                    <Col xl={12} sm={24}>\r\n                        <div className=\"ship-container__box\">\r\n                            <Row>\r\n                                <Col xl={12} lg={12} md={12} sm={12} xs={12} span={12}>\r\n                                    <Row>\r\n                                        <h1>General ship info</h1>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xl={12} lg={12} md={12} sm={12} xs={12} span={12}>\r\n                                    <Row justify=\"end\">\r\n                                        <Button onClick={this.redirectToMovementsPanel.bind(this)}>\r\n                                            Go to Movements Panel\r\n                                        </Button>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"generalInfoContainer\" align=\"middle\">\r\n                                <Col xl={10} lg={10} md={10} sm={10} xs={10} span={10}>\r\n                                    <h4 className=\"customH3tag\">{this.props.selectedShip.info.VesselAge} years</h4>\r\n                                    <p className=\"customPtag\">VESSEL AGE</p>\r\n                                    <Row></Row>\r\n                                    <h4 className=\"customH3tag\">{this.props.selectedShip.info.BuiltDate}</h4>\r\n                                    <p className=\"customPtag\">BUILT DATE</p>\r\n                                </Col>\r\n\r\n                                <Col xl={10} lg={10} md={10} sm={10} xs={10} span={10}>\r\n                                    <h4 className=\"customH3tag\">{this.props.selectedShip.info.DDLastDate}</h4>\r\n                                    <p className=\"customPtag\">LAST DRY DOCK DATE</p>\r\n                                    <h4 className=\"customH3tag\">{this.props.selectedShip.info.DDNextDate}</h4>\r\n                                    <p className=\"customPtag\">NEXT DRY DOCK DATE</p>\r\n                                </Col>\r\n                                <Col xl={4} lg={4} md={4} sm={4} xs={4} span={4} className=\"blueSideBlock\"></Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {/* Bottom panel */}\r\n                    <Col span={24}>\r\n                        <div className=\"ship-container__box\" style={{ height: \"auto\" }}>\r\n                            <Row>\r\n                                <h1>Detailed ship info</h1>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xl={7} lg={7} md={24} sm={24} xs={24} span={8}>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.ShipManager}</h3>\r\n                                    <p className=\"customPtag\">SHIP MANAGER</p>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.ShipOwner}</h3>\r\n                                    <p className=\"customPtag\">SHIP ShipOwner</p>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.ShipBuilder}</h3>\r\n                                    <p className=\"customPtag\">SHIP BUILDER</p>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.SalesRepresentative}</h3>\r\n                                    <p className=\"customPtag\">SALES REPRESENTATIVE</p>\r\n                                </Col>\r\n\r\n                                <Col style={{ height: \"200px\" }}>\r\n                                    <Divider type=\"vertical\" style={{ height: \"100%\" }} />\r\n                                </Col>\r\n                                <Col xl={7} lg={7} md={24} sm={24} xs={24} span={8}>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.CountryOrigin}</h3>\r\n                                    <p className=\"customPtag\">COUNTRY ORIGIN</p>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.RegionOrigin}</h3>\r\n                                    <p className=\"customPtag\">REGION ORIGIN</p>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.ShipOperator}</h3>\r\n                                    <p className=\"customPtag\">SHIP OPERATOR</p>\r\n                                    <h3 className=\"customH3tag\">\r\n                                        {this.props.selectedShip.info.Active ? \"ACTIVE\" : \"INACTIVE\"}\r\n                                    </h3>\r\n                                    <p className=\"customPtag\">STATECODE</p>\r\n                                </Col>\r\n\r\n                                <Col style={{ height: \"200px\" }}>\r\n                                    <Divider type=\"vertical\" style={{ height: \"100%\" }} />\r\n                                </Col>\r\n                                <Col xl={7} lg={7} md={24} sm={24} xs={24} span={8}>\r\n                                    <h3 className=\"customH3tag\">{this.props.selectedShip.info.TechnicalManager}</h3>\r\n                                    <p className=\"customPtag\">TECHNICAL MANAGER</p>\r\n                                    <h3 className=\"customH3tag\">\r\n                                        {this.props.selectedShip.info.TechnicalManagerCountry}\r\n                                    </h3>\r\n                                    <p className=\"customPtag\">TECHNICAL MANAGER COUNTRY</p>\r\n                                    <h3 className=\"customH3tag\">\r\n                                        {this.props.selectedShip.info.TechnicalManagerRegion}\r\n                                    </h3>\r\n                                    <p className=\"customPtag\">TECHNICAL MANAGER REGION</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        } else {\r\n            return <LoadingScreen container=\"fill\" />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect((state: RootState) => state.ships)(ShipPanel);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"App/redux/reducers/rootReducer\";\r\nimport agent from \"App/api/agent\";\r\n\r\nimport { Doughnut, Bar, Line } from \"react-chartjs-2\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport {\r\n    ISalesRepHistoryOfPaintsDataObject,\r\n    ISalesRepHistoryOfPaintsResponse,\r\n    ISalesRepStatisticsPaintsResponse,\r\n} from \"App/api/salesRepresentatives/salesRepInterfaces\";\r\nimport LoadingScreen from \"App/shared/components/LoaderScreen\";\r\nimport { IMostUsedPaintsResponse } from \"App/api/paints/PaintsInterface\";\r\n\r\nconst PPGMarineId: number = 0;\r\n\r\ninterface IHistogramState {\r\n    isLoading: boolean;\r\n    dataTime: string[] | null;\r\n    dataQuantity: number[] | null;\r\n    name: string | null;\r\n}\r\n\r\ninterface IPaintedShipsBySalesRep {\r\n    isLoading: boolean;\r\n    dataQuantity: number[];\r\n    dataSalesRep: string[];\r\n}\r\n\r\ninterface IMostUsedPaint {\r\n    isLoading: boolean;\r\n    dataQuantity: number[] | null;\r\n    dataPaintName: string[] | null;\r\n}\r\n\r\nconst Home: React.FC<any> = (props: any) => {\r\n    // const state: RootState = useSelector((state: RootState) => state);\r\n\r\n    const [histogram, setHistogram] = useState<IHistogramState>({\r\n        isLoading: true,\r\n        dataQuantity: null,\r\n        dataTime: null,\r\n        name: null,\r\n    });\r\n\r\n    const [chartPie, setChartPie] = useState<IPaintedShipsBySalesRep>({\r\n        isLoading: true,\r\n        dataQuantity: null,\r\n        dataSalesRep: null,\r\n    });\r\n\r\n    const [mostUsedPaint, setMostUsedPaint] = useState<IMostUsedPaint>({\r\n        dataPaintName: null,\r\n        dataQuantity: null,\r\n        isLoading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        // console.log(\"START\", new Date().toLocaleTimeString());\r\n        agent.SalesRep.getSalesRepHistoryOfPaints(2).then((res: ISalesRepHistoryOfPaintsResponse) => {\r\n            let dataQuantity: number[] = [];\r\n            let dataTime: string[] = [];\r\n\r\n            res.data.forEach((value, index, array) => {\r\n                dataQuantity.push(value.count);\r\n                dataTime.push(value.date);\r\n            });\r\n\r\n            setHistogram({ isLoading: false, dataQuantity, dataTime, name: \"Sales Representative 1\" });\r\n            // console.log(\"HISTOGRAM\", new Date().toLocaleTimeString());\r\n        });\r\n\r\n        agent.SalesRep.getSalesRepPaintsStatistics().then((res: ISalesRepStatisticsPaintsResponse) => {\r\n            let dataQuantity: number[] = [];\r\n            let dataSalesRep: string[] = [];\r\n\r\n            let sum = 0;\r\n            let name = \"Others\";\r\n            for (let i = 0; i < res.length; i++) {\r\n                if (i < 1) {\r\n                    dataQuantity.push(res[i].count);\r\n                    dataSalesRep.push(res[i].sales_rep);\r\n                } else {\r\n                    sum += res[i].count;\r\n                }\r\n            }\r\n\r\n            console.log(sum);\r\n            dataQuantity.push(sum);\r\n            dataSalesRep.push(name);\r\n\r\n            setChartPie({\r\n                dataQuantity: dataQuantity.reverse(),\r\n                dataSalesRep: dataSalesRep.reverse(),\r\n                isLoading: false,\r\n            });\r\n            // console.log(\"PIE\", new Date().toLocaleTimeString());\r\n            console.log(chartPie.dataQuantity);\r\n        });\r\n\r\n        agent.Paints.getMostUsedPaints().then((res: IMostUsedPaintsResponse) => {\r\n            let dataQuantity: number[] = [];\r\n            let dataPaintName: string[] = [];\r\n\r\n            let sum = 0;\r\n            let name = \"Others\";\r\n\r\n            for (let i = 0; i < res.length; i++) {\r\n                if (i < 20) {\r\n                    dataQuantity.push(res[i].quantity);\r\n                    dataPaintName.push(res[i].product);\r\n                } else {\r\n                    sum += res[i].quantity;\r\n                }\r\n            }\r\n\r\n            dataQuantity.push(sum);\r\n            dataPaintName.push(name);\r\n\r\n            setMostUsedPaint({ isLoading: false, dataQuantity, dataPaintName });\r\n            // console.log(\"BAR\", new Date().toLocaleTimeString());\r\n        });\r\n    }, []);\r\n\r\n    // Dane do wykresu kołowego\r\n    const pieChartData = () => ({\r\n        labels: [\"Others\", \"Sales Rep. 1\"],\r\n        datasets: [\r\n            {\r\n                label: \"Ships painted by Sales Representative 1\",\r\n                data: [20420, 65123],\r\n                backgroundColor: [\"#36a2ebd0\", \"#ff6384d0\", \"ffd15cd0\", \"9567e0d0\", \"c8cbd0\"],\r\n                borderColor: [\"#36a2eb\", \"#ff6384\", \"ffd15c\", \"9567e0\", \"717884\"],\r\n                borderWidth: 2,\r\n            },\r\n        ],\r\n    });\r\n\r\n    // Dane do wykresu liniowego\r\n    const lineChartData = () => ({\r\n        labels: histogram.dataTime,\r\n        datasets: [\r\n            {\r\n                data: histogram.dataQuantity,\r\n                label: histogram.name,\r\n                borderColor: \"rgba(54, 162, 235, 1)\",\r\n                fill: false,\r\n            },\r\n        ],\r\n    });\r\n\r\n    // Dane do wykresu slupkowego\r\n    const barChartData = () => ({\r\n        labels: [\r\n            \"Paint 1\",\r\n            \"Paint 2\",\r\n            \"Paint 3\",\r\n            \"Paint 4\",\r\n            \"Paint 5\",\r\n            \"Paint 6\",\r\n            \"Paint 7\",\r\n            \"Paint 8\",\r\n            \"Paint 9\",\r\n            \"Paint 10\",\r\n            \"Paint 11\",\r\n            \"Paint 12\",\r\n            \"Paint 13\",\r\n            \"Paint 14\",\r\n            \"Paint 15\",\r\n            \"Paint 16\",\r\n            \"Paint 17\",\r\n            \"Paint 18\",\r\n            \"Paint 19\",\r\n            \"Paint 20\",\r\n            \"Others\",\r\n        ],\r\n        datasets: [\r\n            {\r\n                label: \"Product\",\r\n                backgroundColor: [\r\n                    \"#ffa600\",\r\n                    \"#ff7c43\",\r\n                    \"#f95d6a\",\r\n                    \"#d45087\",\r\n                    \"#d45087\",\r\n                    \"#a05195\",\r\n                    \"#665191\",\r\n                    \"#665191\",\r\n\r\n                    \"#2f4b7c\",\r\n                    \"#2f4b7c\",\r\n                    \"#2f4b7c\",\r\n\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#003f5c\",\r\n                    \"#c2ced8\",\r\n                ],\r\n                data: mostUsedPaint.dataQuantity,\r\n            },\r\n        ],\r\n        responsive: false,\r\n    });\r\n\r\n    const minHeight = {\r\n        minHeight: \"200px\",\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row justify=\"center\">\r\n                <Col md={24} lg={24}>\r\n                    <div className=\"box-container__box\">\r\n                        <Row justify=\"center\" style={{ height: \"100%\" }}>\r\n                            <Col span={24} style={{ textAlign: \"center\" }}>\r\n                                <h1>Ships painted by Sales Representative 1</h1>\r\n                            </Col>\r\n                            <Col span={24} style={{ textAlign: \"center\" }}>\r\n                                <h3 style={{ color: \"gray\", letterSpacing: \"3px\", marginTop: \"-1.2em\" }}>\r\n                                    T I M E L I N E\r\n                                </h3>\r\n                            </Col>\r\n                            <Col span={24} style={minHeight}>\r\n                                {histogram.isLoading && <LoadingScreen container=\"fill\" />}\r\n                                {histogram.isLoading || <Line height={400} width={1200} data={lineChartData} />}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                <Col md={24} lg={12}>\r\n                    <div className=\"box-container__box\">\r\n                        <Row justify=\"center\">\r\n                            <Col span={24} style={{ textAlign: \"center\" }}>\r\n                                <h1>Most popular products</h1>\r\n                            </Col>\r\n                            <Col span={24} style={minHeight}>\r\n                                {mostUsedPaint.isLoading && <LoadingScreen container=\"fill\" />}\r\n                                {mostUsedPaint.isLoading || <Bar data={barChartData} />}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                <Col md={24} lg={12}>\r\n                    <div className=\"box-container__box\">\r\n                        <Row justify=\"center\">\r\n                            <Col span={24} style={{ textAlign: \"center\" }}>\r\n                                <h1 style={{ marginBottom: \"1em\" }}>Ships sales representatives</h1>\r\n                            </Col>\r\n                            <Col span={24} style={{ textAlign: \"center\" }}>\r\n                                <h3 style={{ color: \"gray\", letterSpacing: \"5px\" }}></h3>\r\n                            </Col>\r\n                            <Col span={24} style={minHeight}>\r\n                                {chartPie.isLoading && <LoadingScreen container=\"fill\" />}\r\n                                {chartPie.isLoading || (\r\n                                    <Row justify=\"center\">\r\n                                        <Col xs={24} md={4} lg={4} xl={4}>\r\n                                            <Row align=\"middle\">\r\n                                                <Col span={24} style={{ textAlign: \"left\" }}>\r\n                                                    <strong>{65123}</strong>\r\n                                                    <br />\r\n                                                    Sales Representative 1\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: \"left\", marginTop: \"2em\" }}>\r\n                                                    <strong>{20420}</strong>\r\n                                                    <br />\r\n                                                    Others\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={24} md={20} lg={16} xl={16} style={{ marginBottom: \"2em\" }}>\r\n                                            <Doughnut\r\n                                                data={pieChartData}\r\n                                                options={{\r\n                                                    legend: {\r\n                                                        reverse: true,\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Dispatch } from \"react\";\r\nimport {\r\n    Menu,\r\n    Table,\r\n    Modal,\r\n    Button,\r\n    Input,\r\n    Tag,\r\n    Col,\r\n    Row,\r\n    InputNumber,\r\n    DatePicker,\r\n    AutoComplete,\r\n    Cascader,\r\n    Tooltip,\r\n} from \"antd\";\r\n\r\nimport { ShipShortEntity, IShipsFilterParams } from \"App/api/ships/shipInterfaces\";\r\nimport { useSelector, useDispatch, DispatchProp, connect } from \"react-redux\";\r\nimport { RootState, ShipState } from \"App/redux/reducers/rootReducer\";\r\nimport { fetchShips, setSelectedShip, IPagination } from \"App/redux/reducers/shipsReducer\";\r\nimport { mapStateToProps } from \"App/redux\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { ProfileOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport { validationFailure } from \"App/redux/reducers/sessionSlice\";\r\n\r\nconst columns = [\r\n    { key: \"ShipId\", dataIndex: \"shipId\", title: \"ID\" },\r\n    { key: \"ShipName\", dataIndex: \"shipName\", title: \"Ship Name\" },\r\n    { key: \"ShipType\", dataIndex: \"shipType\", title: \"Ship Type\" },\r\n    { key: \"Status\", dataIndex: \"status\", title: \"Status\" },\r\n    { key: \"VesselAge\", dataIndex: \"vesselAge\", title: \"Vessel Age\" },\r\n    { key: \"ShipManager\", dataIndex: \"shipManager\", title: \"Ship Manager\" },\r\n    { key: \"ShipOwner\", dataIndex: \"shipOwner\", title: \"Ship Owner\" },\r\n    { key: \"SalesRep\", dataIndex: \"salesRep\", title: \"Sales Representative\" },\r\n];\r\n\r\ninterface OwnProps {}\r\n\r\ninterface TablePanelState {\r\n    data: ShipShortEntity[];\r\n    pagination: IPagination;\r\n    loading: boolean;\r\n    shipId: string;\r\n    shipName: string;\r\n    shipType: string;\r\n    status: string;\r\n    shipManager: string;\r\n    shipOwner: string;\r\n    shipAge: string;\r\n    shipRepresentative: string;\r\n}\r\n\r\ntype TablePanelProps = OwnProps & DispatchProp & ShipState & RouteComponentProps;\r\n\r\nclass TablePanel extends React.Component<TablePanelProps, TablePanelState> {\r\n    constructor(props: TablePanelProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.ships,\r\n            pagination: {\r\n                current: 1,\r\n                pageSize: props.pagination.pageSize,\r\n                total: props.pagination.total,\r\n            },\r\n            loading: props.isFetchingData,\r\n            shipId: \"\",\r\n            shipName: \"\",\r\n            shipType: \"\",\r\n            status: \"\",\r\n            shipManager: \"\",\r\n            shipOwner: \"\",\r\n            shipAge: \"\",\r\n            shipRepresentative: \"\",\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: TablePanelProps, state: TablePanelState) {\r\n        return { pagination: props.pagination, data: props.ships };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.data && !this.props.isFetchingData) {\r\n            this.props.dispatch<any>(\r\n                fetchShips(this.state.pagination, {\r\n                    \"ship-id\": 5065160,\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    handleTableChange = (pagination, filters, sorter) => {\r\n        this.props.dispatch<any>(fetchShips(pagination));\r\n        this.setState({\r\n            pagination: {\r\n                current: pagination.current,\r\n                pageSize: pagination.pageSize,\r\n                total: pagination.total,\r\n            },\r\n        });\r\n    };\r\n\r\n    handleTableSearch = () => {\r\n        let val: IShipsFilterParams = {};\r\n\r\n        if (this.state.shipId !== \"\") {\r\n            val[\"ship-id\"] = Number(this.state.shipId);\r\n        }\r\n\r\n        if (this.state.shipName !== \"\") {\r\n            val[\"ship-name\"] = this.state.shipName;\r\n        }\r\n\r\n        if (this.state.shipType !== \"\") {\r\n            val[\"ship-type\"] = this.state.shipType;\r\n        }\r\n\r\n        if (this.state.status !== \"\") {\r\n            val[\"status\"] = this.state.status;\r\n        }\r\n\r\n        if (this.state.shipManager !== \"\") {\r\n            val[\"ship-manager\"] = this.state.shipManager;\r\n        }\r\n\r\n        if (this.state.shipOwner !== \"\") {\r\n            val[\"ship-owner\"] = this.state.shipOwner;\r\n        }\r\n\r\n        if (this.state.shipAge !== \"\") {\r\n            val[\"vessel-age\"] = Number(this.state.shipAge);\r\n        }\r\n\r\n        if (this.state.shipRepresentative !== \"\") {\r\n            val[\"sales-rep\"] = this.state.shipRepresentative;\r\n        }\r\n\r\n        this.props.dispatch<any>(fetchShips(this.state.pagination, val));\r\n    };\r\n\r\n    redirectToShipPanelFromButton = (event) => {\r\n        this.props.history.push(`ships/${this.props.selectedShip.id}`);\r\n    };\r\n\r\n    redirectToShipPanelFromDoubleClick = (record: ShipShortEntity) => {\r\n        this.props.history.push(`ships/${record.shipId}`);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel\">\r\n                <Row justify=\"center\">\r\n                    <h1>Ships</h1>\r\n                </Row>\r\n                <div style={{ width: \"auto\", margin: \"auto\" }}>\r\n                    <Row justify=\"center\" align=\"middle\">\r\n                        <Col>\r\n                            <Input.Group size=\"large\">\r\n                                <Row gutter={8}>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Ship Id\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    shipId: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Ship Name\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    shipName: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Ship Type\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    shipType: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Status\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    status: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row gutter={8} style={{ marginTop: 5 }}>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Ship Manager\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    shipManager: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Ship Owner\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    shipOwner: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Ship Age\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    shipAge: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        <Input\r\n                                            placeholder=\"Ship Representative\"\r\n                                            onChange={(val) => {\r\n                                                this.setState({\r\n                                                    shipRepresentative: val.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Input.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row align=\"middle\" justify=\"center\">\r\n                                <Button type=\"primary\" icon={<SearchOutlined />} onClick={this.handleTableSearch}>\r\n                                    Search\r\n                                </Button>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* </Input.Group> */}\r\n                </div>\r\n                <br />\r\n                <Table\r\n                    rowSelection={{\r\n                        type: \"radio\",\r\n                        onSelect: (record: ShipShortEntity, selected: boolean, selectedRows: ShipShortEntity[]) => {\r\n                            let [selectedShip] = selectedRows;\r\n                            this.props.dispatch(setSelectedShip(selectedShip.shipId));\r\n                        },\r\n                    }}\r\n                    columns={columns}\r\n                    pagination={this.state.pagination}\r\n                    dataSource={this.state.data}\r\n                    loading={this.props.isFetchingData}\r\n                    onChange={this.handleTableChange}\r\n                    rowKey={(record) => record.shipId}\r\n                    onRow={(record: ShipShortEntity, rowIndex) => {\r\n                        return {\r\n                            onMouseEnter: (event) => {\r\n                                event.currentTarget.style.cursor = \"pointer\";\r\n                            },\r\n                            onDoubleClick: (event) => {\r\n                                this.props.dispatch(setSelectedShip(record.shipId));\r\n                                this.redirectToShipPanelFromDoubleClick(record);\r\n                            },\r\n                        };\r\n                    }}\r\n                />\r\n\r\n                <Button disabled={!this.props.selectedShip.id} onClick={this.redirectToShipPanelFromButton}>\r\n                    <ProfileOutlined />\r\n                    Ship Details\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state: RootState) => state.ships)(TablePanel);\r\n","// React, React-Router Libraries imports\r\nimport React from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Link, RouteChildrenProps } from \"react-router-dom\";\r\n\r\n// Local JS and JSX imports\r\n\r\n// Libraries Components imports\r\nimport { Button } from \"antd\";\r\nimport {\r\n    HomeOutlined,\r\n    CarOutlined,\r\n    LogoutOutlined,\r\n    MenuOutlined,\r\n    AreaChartOutlined,\r\n    OrderedListOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\n// Funcitons Imports\r\nimport { mapStateToProps } from \"../redux\";\r\nimport { devalidateSession } from \"App/redux/reducers/sessionSlice\";\r\n\r\nconst Navbar: React.FC<RouteChildrenProps> = (props: RouteChildrenProps) => {\r\n    const menuRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n    const dispatch = useDispatch();\r\n    const logOut = () => {\r\n        dispatch(devalidateSession());\r\n    };\r\n\r\n    const routeActive = (url: string) => {\r\n        return props.location.pathname.match(url) ? \"navbar__btn--active\" : \"navbar__btn--normal\";\r\n    };\r\n\r\n    const toggleMenu = () => {\r\n        let menuElement = menuRef.current?.style;\r\n        const menuElementWidth = Number.parseInt(menuElement?.width || \"200\");\r\n\r\n        if (menuElement && menuElementWidth > 0) {\r\n            menuElement.overflow = \"hidden\";\r\n            menuElement.width = \"0\";\r\n        } else if (menuElement) {\r\n            menuElement.width = \"200px\";\r\n            setTimeout(() => {\r\n                menuElement.overflow = \"unset\";\r\n            }, 500);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"hamburger-btn\" onClick={toggleMenu}>\r\n                <MenuOutlined />\r\n            </Button>\r\n            <div className=\"navbar-left\" ref={menuRef}>\r\n                <Link to={`${props.match?.url}/home`} className=\"navbar__link\">\r\n                    <Button type=\"dashed\" className={`navbar__btn ${routeActive(\"home\")}`}>\r\n                        <HomeOutlined />\r\n                        Home\r\n                    </Button>\r\n                </Link>\r\n                <Link to={`${props.match?.url}/predict`} className=\"navbar__link\">\r\n                    <Button type=\"dashed\" className={`navbar__btn ${routeActive(\"predict\")}`}>\r\n                        <AreaChartOutlined />\r\n                        Predict\r\n                    </Button>\r\n                </Link>\r\n                <Link to={`${props.match?.url}/ships`} className=\"navbar__link\">\r\n                    <Button type=\"dashed\" className={`navbar__btn ${routeActive(\"ships\")}`}>\r\n                        <OrderedListOutlined />\r\n                        Ships\r\n                    </Button>\r\n                </Link>\r\n                <Button type=\"dashed\" className=\"navbar__btn navbar__btn--normal\" onClick={logOut}>\r\n                    <LogoutOutlined />\r\n                    Sign Out\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, undefined)(Navbar);\r\n","import React, { useState } from \"react\";\nimport agent from \"App/api/agent\";\n\nimport { Form, Row, Col, Input, Button, Tooltip, DatePicker, notification } from \"antd\";\n\n// Styles Imports\nimport \"./Predict.css\";\nimport { QuestionCircleOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport { IModelPredictionRequest, IModelPredictionResponse } from \"App/api/model/modelInterface\";\nimport { ResponseError } from \"App/api/ships/shipInterfaces\";\nimport LoadingScreen from \"App/shared/components/LoaderScreen\";\n\nexport interface IPredictProps {}\n\nexport interface IPredictState {\n    nextPaintingDate?: string | null;\n    nextPaintingDiff?: number | null;\n    isPostingPrediction: boolean;\n}\n\nconst Predict: React.FC<IPredictProps> = (props: IPredictProps) => {\n    const [prediction, setPrediction] = useState<IPredictState>({\n        isPostingPrediction: false,\n        nextPaintingDate: null,\n        nextPaintingDiff: null,\n    });\n\n    const postPrediction = (values) => {\n        setPrediction({\n            isPostingPrediction: true,\n        });\n\n        for (let key in values) {\n            if (!values[key]) delete values[key];\n            if (key === \"lastPaintingDate\" && values[key]) {\n                values[key] = new Date(values[key]._d).getTime();\n            }\n        }\n\n        agent.Models.postModelPrediction(values as IModelPredictionRequest)\n            .then((res: IModelPredictionResponse) => {\n                let dueDate = new Date(res.nextPaintingDate);\n                let today = new Date();\n\n                let diff = dueDate.getTime() - today.getTime();\n\n                let diffTime = moment(diff).days();\n                console.log(diffTime);\n\n                setPrediction({\n                    nextPaintingDate: dueDate.toLocaleDateString(),\n                    nextPaintingDiff: diffTime,\n                    isPostingPrediction: false,\n                });\n            })\n            .catch((error: ResponseError) => {\n                setPrediction({\n                    isPostingPrediction: false,\n                });\n                notification.error({\n                    message: \"An Error occured\",\n                    description: error.description,\n                    placement: \"bottomRight\",\n                });\n            });\n    };\n\n    function disabledDate(current) {\n        return current && current > moment().endOf(\"day\");\n    }\n\n    return (\n        <div className=\"panel\">\n            <Row justify=\"center\">\n                <h1>Predict Panel</h1>\n            </Row>\n\n            <Form onFinish={postPrediction}>\n                <Row className=\"shipDataInputBox\" justify=\"center\">\n                    <Col xl={8} lg={8} md={24} sm={24} xs={24} span={8} className=\"first\">\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"shipType\">\n                                <Input\n                                    placeholder=\"Ship Type\"\n                                    suffix={\n                                        <Tooltip title=\"Type of a ship ex. Yacht, crewboat\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"status\">\n                                <Input\n                                    placeholder=\"Status\"\n                                    suffix={\n                                        <Tooltip title=\"Status of a ship ex. launched, projected\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"vesselAge\">\n                                <Input\n                                    placeholder=\"Vessel age\"\n                                    suffix={\n                                        <Tooltip title=\"Age of a vessel in years\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"shipBuilder\">\n                                <Input\n                                    placeholder=\"Ship builder\"\n                                    suffix={\n                                        <Tooltip title=\"A company that built the ship\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"shipyardCountry\">\n                                <Input\n                                    placeholder=\"Shipyard country\"\n                                    suffix={\n                                        <Tooltip title=\"Country where shipyard is located\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                    </Col>\n                    <Col xl={2} lg={2} md={24} sm={24} xs={24} span={8}></Col>\n                    <Col xl={8} lg={8} md={24} sm={24} xs={24} span={8} className=\"second\">\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"shipyardRegion\">\n                                <Input\n                                    placeholder=\"Shipyard region\"\n                                    suffix={\n                                        <Tooltip title=\"Region where shipyard is located\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"ppgmcTechnicalmanager\">\n                                <Input\n                                    placeholder=\"Technical manager\"\n                                    suffix={\n                                        <Tooltip title=\"Who is a technical manager of a ship\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"techmngCountry\">\n                                <Input\n                                    placeholder=\"Technical manager country\"\n                                    suffix={\n                                        <Tooltip title=\"Country where technical manager is located\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"techmngRegion\">\n                                <Input\n                                    value=\"123\"\n                                    placeholder=\"Technical manager region\"\n                                    suffix={\n                                        <Tooltip title=\"Region where technical manager is located\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\">\n                            <Form.Item name=\"salesRep\">\n                                <Input\n                                    value=\"#PPGMarine\"\n                                    placeholder=\"Sales representative\"\n                                    suffix={\n                                        <Tooltip title=\"Who is a sales representative of a certain ship\">\n                                            <QuestionCircleOutlined />\n                                        </Tooltip>\n                                    }\n                                />\n                            </Form.Item>\n                        </Row>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={24} lg={24} md={24} sm={24} xs={24} span={12}>\n                        <Row className=\"inputRow\" justify=\"center\">\n                            <Form.Item\n                                name=\"lastPaintingDate\"\n                                style={{ width: \"unset\" }}\n                                rules={[{ required: true, message: \"Please input last painting Date!\" }]}\n                            >\n                                <DatePicker\n                                    className=\"previousPaintinDatePicked\"\n                                    format={\"YYYY/MM/DD\"}\n                                    size=\"large\"\n                                    placeholder=\"Select previous painting date\"\n                                    disabledDate={disabledDate}\n                                />\n                            </Form.Item>\n                        </Row>\n                        <Row className=\"inputRow\" justify=\"center\">\n                            <Form.Item style={{ width: \"unset\" }}>\n                                <Button className=\"makePredictionButton\" size=\"large\" type=\"primary\" htmlType=\"submit\">\n                                    Suggest Painting Date\n                                </Button>\n                            </Form.Item>\n                        </Row>\n                    </Col>\n                </Row>\n            </Form>\n\n            <Row justify=\"center\" className=\"inputRow predictionBlock\">\n                {prediction.isPostingPrediction && <LoadingScreen container=\"fill\" />}\n                {prediction.nextPaintingDate && (\n                    <>\n                        {console.log(prediction)}\n                        <Col xl={3} lg={3} md={3} sm={3} xs={3} span={3} className=\"predictionLeftColumn\">\n                            <Row justify=\"center\" align=\"middle\" className=\"predictionBlock\">\n                                <CheckCircleOutlined className=\"checkIcon\" />\n                            </Row>\n                        </Col>\n                        <Col xl={16} lg={16} md={16} sm={16} xs={16} span={12} className=\"predictionRightColumn\">\n                            <Row justify=\"center\" align=\"middle\" className=\"predictionBlock\">\n                                <Col>\n                                    <Row>\n                                        <h2>\n                                            The system suggests applying a new coating on {prediction.nextPaintingDate}\n                                        </h2>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </>\n                )}\n            </Row>\n        </div>\n    );\n};\n\nexport default Predict;\n","import React from \"react\";\nimport { ComposableMap, Geographies, Geography, Marker, ZoomableGroup, Point } from \"react-simple-maps\";\nimport { ShipMovementArray } from \"App/api/ships/shipInterfaces\";\nimport { IPorts } from \"App/api/ports/portsInterfaces\";\n\ninterface IMapChartProps {\n    dataSource: {\n        IdMovement: number | string;\n        PortLatitudeDecimal: number;\n        PortLongitudeDecimal: number;\n    }[];\n}\n\n// lon - x, lat = y\nfunction coordsCentroidPoint(coords: [number, number][]): Point {\n    let sumLat: number = 0;\n    let sumLon: number = 0;\n\n    for (let i = 0; i < coords.length; i++) {\n        sumLon += coords[i][0];\n        sumLat += coords[i][1];\n    }\n\n    sumLon /= coords.length;\n    sumLat /= coords.length;\n\n    let p: Point = [sumLon, sumLat];\n    return p;\n}\n\nconst MapChart = (props: IMapChartProps) => {\n    let coords = [];\n\n    for (let i = 0; i < props.dataSource.length; i++) {\n        coords.push([props.dataSource[i].PortLongitudeDecimal, props.dataSource[i].PortLatitudeDecimal]);\n    }\n\n    let centroid = coordsCentroidPoint(coords);\n\n    return (\n        <ComposableMap style={{ width: \"100%\", height: \"auto\" }}>\n            <ZoomableGroup center={centroid}>\n                <Geographies geography={geoUrl}>\n                    {({ geographies }) =>\n                        geographies.map((geo) => (\n                            <Geography key={geo.rsmKey} geography={geo} fill=\"#EAEAEC\" stroke=\"#D6D6DA\" />\n                        ))\n                    }\n                </Geographies>\n                {props.dataSource.map((x) => (\n                    <Marker key={x.IdMovement} coordinates={[x.PortLongitudeDecimal, x.PortLatitudeDecimal]}>\n                        <g\n                            fill=\"none\"\n                            stroke=\"#FF5533\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            transform=\"translate(-12, -24)\"\n                        >\n                            <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                            <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                        </g>\n                        {/* <text textAnchor=\"middle\" style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}>\n                            {x.PortFrom}\n                        </text> */}\n                    </Marker>\n                ))}\n            </ZoomableGroup>\n        </ComposableMap>\n    );\n};\n\nexport default MapChart;\n\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n","import { ShipMovementArray, ShipEntity } from \"App/api/ships/shipInterfaces\";\r\nimport Axios from \"axios\";\r\n\r\ntype IMapChartProps = {\r\n    IdMovement: number | string;\r\n    PortLatitudeDecimal: number;\r\n    PortLongitudeDecimal: number;\r\n    PortFrom: string;\r\n}[];\r\n\r\nexport async function parseMovements(movements: ShipMovementArray, ship: ShipEntity): Promise<IMapChartProps> {\r\n    let mmt: IMapChartProps = [];\r\n\r\n    if (ship.ShipName === \"Burrard Otter Ii\") {\r\n        for (let i = 0; i < movements.length; i++) {\r\n            const element = movements[i];\r\n            mmt.push({\r\n                IdMovement: element.IdMovement,\r\n                PortFrom: element.PortFrom,\r\n                PortLatitudeDecimal: element.PortLatitudeDecimal,\r\n                PortLongitudeDecimal: element.PortLongitudeDecimal,\r\n            });\r\n        }\r\n        return mmt;\r\n    }\r\n    switch (ship.ShipId % 10) {\r\n        case 5:\r\n            mmt = [\r\n                {\r\n                    IdMovement: 0,\r\n                    PortLatitudeDecimal: 39.870833,\r\n                    PortLongitudeDecimal: 20.003056,\r\n                    PortFrom: \"Port of Sarande\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 1,\r\n                    PortLatitudeDecimal: 41.805556,\r\n                    PortLongitudeDecimal: 19.593056,\r\n                    PortFrom: \"Port of Shengjin\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 2,\r\n                    PortLatitudeDecimal: 69.442778,\r\n                    PortLongitudeDecimal: -133.031111,\r\n                    PortFrom: \"Port of Tuktoyaktuk\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 3,\r\n                    PortLatitudeDecimal: 43.763333,\r\n                    PortLongitudeDecimal: -65.323611,\r\n                    PortFrom: \"Port of Shelburne\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 4,\r\n                    PortLatitudeDecimal: 73.034722,\r\n                    PortLongitudeDecimal: -84.536944,\r\n                    PortFrom: \"Port of Nanisivik\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 5,\r\n                    PortLatitudeDecimal: 58.7745,\r\n                    PortLongitudeDecimal: -94.1935,\r\n                    PortFrom: \"Port of Churchill\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 6,\r\n                    PortLatitudeDecimal: 73.5,\r\n                    PortLongitudeDecimal: 80.516667,\r\n                    PortFrom: \"Port of Dikson\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 7,\r\n                    PortLatitudeDecimal: 69.704722,\r\n                    PortLongitudeDecimal: 170.263611,\r\n                    PortFrom: \"Port of Pevek\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 8,\r\n                    PortLatitudeDecimal: 71.65,\r\n                    PortLongitudeDecimal: 128.866667,\r\n                    PortFrom: \"Port of Tiksi\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 9,\r\n                    PortLatitudeDecimal: 56.216667,\r\n                    PortLongitudeDecimal: 162.55,\r\n                    PortFrom: \"Port of Ust Kamchatsk\",\r\n                },\r\n            ];\r\n            break;\r\n\r\n        case 7:\r\n            mmt = [\r\n                {\r\n                    IdMovement: 0,\r\n                    PortLatitudeDecimal: -23.982228,\r\n                    PortLongitudeDecimal: -46.292606,\r\n                    PortFrom: \"Port of Santo\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 1,\r\n                    PortLatitudeDecimal: -17.733333,\r\n                    PortLongitudeDecimal: 168.316667,\r\n                    PortFrom: \"Port of Port Vila\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 2,\r\n                    PortLatitudeDecimal: 33.5,\r\n                    PortLongitudeDecimal: 11.116667,\r\n                    PortFrom: \"Port of Zarzis\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 3,\r\n                    PortLatitudeDecimal: 36.766667,\r\n                    PortLongitudeDecimal: 10.283333,\r\n                    PortFrom: \"Port of Rades\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 4,\r\n                    PortLatitudeDecimal: 36.818056,\r\n                    PortLongitudeDecimal: 10.305,\r\n                    PortFrom: \"Port of Tazerka\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 5,\r\n                    PortLatitudeDecimal: 24.15,\r\n                    PortLongitudeDecimal: 67.45,\r\n                    PortFrom: \"Port of Keti Bandar\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 6,\r\n                    PortLatitudeDecimal: 9.933333,\r\n                    PortLongitudeDecimal: -61.566667,\r\n                    PortFrom: \"Port of Boca Grande\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 7,\r\n                    PortLatitudeDecimal: 11.6508,\r\n                    PortLongitudeDecimal: -70.2156,\r\n                    PortFrom: \"Port of Punta Cardon\",\r\n                },\r\n            ];\r\n            break;\r\n        case 0:\r\n            mmt = [\r\n                {\r\n                    IdMovement: 0,\r\n                    PortLatitudeDecimal: 35.3,\r\n                    PortLongitudeDecimal: -2.95,\r\n                    PortFrom: \"Port of Melilla\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 1,\r\n                    PortLatitudeDecimal: 42.263056,\r\n                    PortLongitudeDecimal: 3.183056,\r\n                    PortFrom: \"Port of Rosas\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 2,\r\n                    PortLatitudeDecimal: 43.466667,\r\n                    PortLongitudeDecimal: -8.25,\r\n                    PortFrom: \"Port of Ferrol\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 3,\r\n                    PortLatitudeDecimal: 28.5,\r\n                    PortLongitudeDecimal: -13.866667,\r\n                    PortFrom: \"Port of Puerto del Rosario\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 4,\r\n                    PortLatitudeDecimal: 29.3525,\r\n                    PortLongitudeDecimal: 47.925278,\r\n                    PortFrom: \"Port of Kuwait\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 5,\r\n                    PortLatitudeDecimal: 70.6625,\r\n                    PortLongitudeDecimal: 23.683333,\r\n                    PortFrom: \"Port of Hammerfest\",\r\n                },\r\n\r\n                {\r\n                    IdMovement: 6,\r\n                    PortLatitudeDecimal: 58.147222,\r\n                    PortLongitudeDecimal: 7.997222,\r\n                    PortFrom: \"Port of Kristiansand S.Chris\",\r\n                },\r\n            ];\r\n\r\n        default:\r\n            for (let i = 0; i < movements.length; i++) {\r\n                const element = movements[i];\r\n\r\n                if (i === 0) {\r\n                    let port = encodeURI(element.PortFrom);\r\n                    let res = await fetch(\r\n                        `https://api.opencagedata.com/geocode/v1/json?q=${port}&key=230a2127f4c645bbbed029c6dd58e485`\r\n                    );\r\n                    let data = await res.json();\r\n                    console.log(\"RES\", element.PortFrom, element.PortDestination, data.results);\r\n\r\n                    mmt.push({\r\n                        IdMovement: element.IdMovement,\r\n                        PortFrom: element.PortFrom,\r\n                        PortLatitudeDecimal: data.results[0].geometry.lat,\r\n                        PortLongitudeDecimal: data.results[0].geometry.lng,\r\n                    });\r\n                } else {\r\n                    mmt.push({\r\n                        IdMovement: element.IdMovement,\r\n                        PortFrom: element.PortFrom,\r\n                        PortLatitudeDecimal: element.PortLatitudeDecimal,\r\n                        PortLongitudeDecimal: element.PortLongitudeDecimal,\r\n                    });\r\n                }\r\n            }\r\n            return mmt;\r\n    }\r\n\r\n    mmt = mmt.slice(0, 5);\r\n\r\n    return mmt;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect, DispatchProp } from \"react-redux\";\r\nimport { RootState, ShipState } from \"App/redux/reducers/rootReducer\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { ShipMovementArray, ShipEntity } from \"App/api/ships/shipInterfaces\";\r\nimport { IPagination, setSelectedShip, fetchShipDetails } from \"App/redux/reducers/shipsReducer\";\r\nimport agent from \"App/api/agent\";\r\nimport { AxiosError } from \"axios\";\r\nimport { Form, Row, Col, Input, Button, Tooltip, DatePicker, notification, Divider, Card, Table } from \"antd\";\r\nimport { ComposableMap, Geographies, Geography, Marker, ZoomableGroup } from \"react-simple-maps\";\r\nimport MapChart from \"./MapChart\";\r\nimport LoadingScreen from \"App/shared/components/LoaderScreen\";\r\nimport { IPorts } from \"App/api/ports/portsInterfaces\";\r\nimport { parseMovements } from \"App/shared/components/Utilites\";\r\n\r\ninterface IOwnProps {}\r\ninterface IMovementPanelState {\r\n    isFetchingMovements: boolean;\r\n    movements: any;\r\n    movementsLength: number;\r\n    pagination: IPagination;\r\n    shipId: number;\r\n    ship: ShipEntity | null;\r\n    isFetchingShip: boolean;\r\n}\r\ninterface IRouteParams {\r\n    ship_id: string;\r\n}\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Port Name\",\r\n        dataIndex: \"name\",\r\n    },\r\n    {\r\n        title: \"From Port\",\r\n        dataIndex: \"PortFrom\",\r\n    },\r\n    {\r\n        title: \"From Country\",\r\n        dataIndex: \"CountryFrom\",\r\n    },\r\n    {\r\n        title: \" Port Destination\",\r\n        dataIndex: \"PortDestination\",\r\n    },\r\n    {\r\n        title: \"Arrival Date\",\r\n        dataIndex: \"PortArrivalDate\",\r\n    },\r\n    {\r\n        title: \"Sail Date\",\r\n        dataIndex: \"SailDate\",\r\n    },\r\n    {\r\n        title: \"Longitute\",\r\n        dataIndex: \"PortLongitudeDecimal\",\r\n    },\r\n    {\r\n        title: \"Latitude\",\r\n        dataIndex: \"PortLatitudeDecimal\",\r\n    },\r\n];\r\n\r\nvar geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\ntype IMovementPanelProps = IOwnProps & RouteComponentProps<IRouteParams> & DispatchProp & ShipState;\r\n\r\nclass MovementPanel extends Component<IMovementPanelProps, IMovementPanelState> {\r\n    constructor(props: IMovementPanelProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shipId: Number.parseInt(props.match.params.ship_id),\r\n            ship: this.props.selectedShip.info || null,\r\n            isFetchingShip: !!this.props.selectedShip.info,\r\n            isFetchingMovements: false,\r\n            movements: null,\r\n            movementsLength: 0,\r\n            pagination: {\r\n                current: 0,\r\n                pageSize: 10,\r\n                total: 100,\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.ship) {\r\n            this.fetchShipData();\r\n        } else if (!this.state.movements) {\r\n            this.fetchMovements();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.state.ship) {\r\n            this.fetchShipData();\r\n        } else if (!this.state.movements && !this.state.isFetchingMovements) {\r\n            this.fetchMovements();\r\n        }\r\n    }\r\n\r\n    fetchShipData() {\r\n        this.props.dispatch<any>(fetchShipDetails(this.state.shipId));\r\n        agent.Ships.getShipDetails(this.state.shipId)\r\n            .then((res: ShipEntity) => {\r\n                this.setState({\r\n                    ship: res,\r\n                    isFetchingShip: false,\r\n                });\r\n                this.props.dispatch<any>(setSelectedShip(this.state.shipId));\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    isFetchingShip: false,\r\n                });\r\n                notification.error({\r\n                    message: \"An Error occured\",\r\n                    description: err.message,\r\n                    placement: \"bottomRight\",\r\n                });\r\n            });\r\n    }\r\n\r\n    fetchMovements() {\r\n        this.setState({\r\n            isFetchingMovements: true,\r\n        });\r\n        agent.Ships.getShipAllRoutes(this.state.shipId, { pageNumber: 1, pageSize: 1000 })\r\n            .then((movements: ShipMovementArray) => {\r\n                parseMovements(movements, this.state.ship).then((res) => {\r\n                    this.setState({\r\n                        isFetchingMovements: false,\r\n                        movements: res,\r\n                        movementsLength: movements.length || res.length,\r\n                    });\r\n                });\r\n            })\r\n            .catch((err: any) => {\r\n                this.setState({\r\n                    isFetchingMovements: false,\r\n                });\r\n                notification.error({\r\n                    message: \"An Error occured\",\r\n                    description: err.description,\r\n                    placement: \"bottomRight\",\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const Data = {\r\n            fontSize: \"1.2em\",\r\n        };\r\n\r\n        if (!this.state.isFetchingMovements && this.state.movements && this.state.ship) {\r\n            return (\r\n                <Row align=\"top\" style={{ height: \"100%\", paddingRight: \"1em\" }}>\r\n                    <Col span={24} style={{ marginTop: \"1em\" }}>\r\n                        <Row\r\n                            gutter={[16, 16]}\r\n                            align=\"middle\"\r\n                            justify=\"space-around\"\r\n                            style={{ marginBottom: \"1em\", height: \"auto\" }}\r\n                        >\r\n                            <Col lg={24}>\r\n                                <div className=\"panel\" style={{ padding: 0, height: \"auto\" }}>\r\n                                    <h4 className=\"title\" style={{ marginBottom: \"0.25em\" }}>\r\n                                        {this.state.ship.ShipName}\r\n                                    </h4>\r\n                                    <h4 className=\"subtitle-ov\" style={{ ...Data, paddingLeft: \"3em\" }}>\r\n                                        SHIP NAME\r\n                                    </h4>\r\n                                    <Row justify=\"center\" style={{ marginBottom: \"2em\" }}>\r\n                                        <Col span={18}>\r\n                                            <Divider>\r\n                                                <h2>Movements</h2>\r\n                                            </Divider>\r\n                                            <Row justify=\"center\" align=\"middle\">\r\n                                                <Col xs={10} md={8} xl={8}>\r\n                                                    <h4 className=\"title-no\">{this.state.movementsLength}</h4>\r\n                                                    <h4 className=\"subtitle-ov\" style={Data}>\r\n                                                        TOTAL MOVEMENTS\r\n                                                    </h4>\r\n                                                </Col>\r\n                                                <Col xs={10} md={8} xl={8}>\r\n                                                    <h4 className=\"title-no\">\r\n                                                        {this.state.movements.length\r\n                                                            ? this.state.movements[0].PortFrom\r\n                                                            : \"N/D\"}\r\n                                                    </h4>\r\n                                                    <h4 className=\"subtitle-ov\" style={Data}>\r\n                                                        LAST PORT\r\n                                                    </h4>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Divider />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={24}>\r\n                                <Row justify=\"center\" align=\"middle\" style={{ height: \"100%\" }}>\r\n                                    <Col span={22}>\r\n                                        <div\r\n                                            className=\"panel\"\r\n                                            style={{ padding: 0, maxHeight: \"800px\", overflowY: \"hidden\" }}\r\n                                        >\r\n                                            <MapChart dataSource={this.state.movements} />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                    <LoadingScreen container=\"fill\" />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect((state: RootState) => state.ships)(MovementPanel);\r\n","// React, React-Router Libraries imports\nimport React from \"react\";\nimport { Redirect, RouteChildrenProps } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// Local JS and JSX imports\nimport ProtectedRoute from \"App/shared/components/ProtectedRoute\";\nimport ShipPanel from \"./routes/Ship/ShipPanel\";\nimport Home from \"./routes/Home/Home\";\nimport TableView from \"./routes/TablePanel/TablePanel\";\nimport Navbar from \"App/shared/Navbar\";\n\n// Libraries Components imports\n\n// Styles Imports\nimport \"./AuthView.css\";\n\n// Funcitons Imports\nimport { mapStateToProps } from \"App/redux\";\nimport Predict from \"./routes/Predict/Predict\";\nimport MovementPanel from \"./routes/MovementPanel/MovementPanel\";\n\nconst AuthView: React.FC<RouteChildrenProps> = (props: RouteChildrenProps) => {\n    const { location, match, history } = props;\n    const routeProps = {\n        location,\n        match,\n        history,\n    };\n    return (\n        <div className=\"home\">\n            <Navbar {...props} />\n            <div className=\"main-panel\">\n                <ProtectedRoute path={props.match?.url + \"/home\"} exact Component={Home} {...routeProps} />\n                <ProtectedRoute path={props.match?.url + \"/ships\"} exact Component={TableView} {...routeProps} />\n                <ProtectedRoute\n                    path={props.match?.url + \"/ships/:ship_id\"}\n                    exact\n                    Component={ShipPanel}\n                    {...routeProps}\n                />\n                <ProtectedRoute\n                    path={props.match?.url + \"/ships/:ship_id/movements\"}\n                    exact\n                    Component={MovementPanel}\n                    {...routeProps}\n                />\n                <ProtectedRoute path={props.match?.url + \"/predict\"} exact Component={Predict} {...routeProps} />\n                <Redirect to={routeProps.location.pathname} />\n            </div>\n        </div>\n    );\n};\n\nexport default connect(mapStateToProps, undefined)(AuthView);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./Login.css\";\r\n\r\nimport { mapStateToProps } from \"../redux\";\r\nimport LoadingScreen from \"App/shared/components/LoaderScreen\";\r\nimport { DispatchProp } from \"react-redux\";\r\nimport { RootState } from \"App/redux/reducers/rootReducer\";\r\nimport { Store } from \"antd/lib/form/interface\";\r\nimport { LoginRequest } from \"App/api/account/accountInterfaces\";\r\nimport { authenticateUser, devalidateSession } from \"App/redux/reducers/sessionSlice\";\r\nimport { RouteChildrenProps } from \"react-router-dom\";\r\n\r\ninterface LoginState {\r\n    isSpinning: boolean;\r\n    emitResponse: boolean;\r\n    serverResponse: string;\r\n}\r\n\r\ntype LoginProps = DispatchProp & RootState & RouteChildrenProps;\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n    }\r\n    submitLoginCredentials = (values: Store) => {\r\n        let redirectOnSuccess = () => {\r\n            this.props.history.push(\"/auth/home\");\r\n        };\r\n        let credentials = {\r\n            username: \"AdminLogin\",\r\n            password: \"AdminPassword\",\r\n        } as LoginRequest;\r\n\r\n        this.props.dispatch<any>(authenticateUser(credentials, redirectOnSuccess));\r\n    };\r\n\r\n    logOut = () => {\r\n        this.props.dispatch(devalidateSession());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n                {this.props.session.loadingLogin ? <LoadingScreen /> : undefined}\r\n                <div className=\"container\">\r\n                    <div className=\"left-panel\">\r\n                        <h1 className=\"title\">Sailing Around The World</h1>\r\n                        <h4 className=\"subtitle\">Data Science Project</h4>\r\n                        <hr></hr>\r\n                        <hr></hr>\r\n                    </div>\r\n                    <div className=\"right-panel\">\r\n                        <h1 className=\"title\">Sign In</h1>\r\n                        <Form\r\n                            className=\"login-form\"\r\n                            onFinish={this.submitLoginCredentials}\r\n                            size=\"large\"\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                // rules={[\r\n                                //     {\r\n                                //         required: true,\r\n                                //         message: \"Please input your Username!\",\r\n                                //     },\r\n                                // ]}\r\n                            >\r\n                                <Input\r\n                                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                    placeholder=\"Username\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                // rules={[\r\n                                //     {\r\n                                //         required: true,\r\n                                //         message: \"Please input your Password!\",\r\n                                //     },\r\n                                // ]}\r\n                            >\r\n                                <Input\r\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                    <Checkbox>Remember me</Checkbox>\r\n                                </Form.Item>\r\n                                {\r\n                                    //<a className=\"login-form-forgot\" href=\"#\">}\r\n                                }\r\n                                Forgot password\r\n                            </Form.Item>\r\n                            {this.props.session.error ? (\r\n                                <h4 className=\"text-danger\">{this.props.session.error}</h4>\r\n                            ) : undefined}\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" size=\"large\">\r\n                                    Sign in\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect<RootState, DispatchProp, {}>(mapStateToProps)(Login);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./shared/components/ProtectedRoute\";\nimport AuthView from \"./routes/Auth/AuthView/AuthView\";\nimport Login from \"./routes/Login\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <ProtectedRoute path=\"/auth\" Component={AuthView} />\n                <Route path=\"/404\">404</Route>\n                <Redirect to=\"/404\" />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from 'App/redux/store';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nimport App from 'App/App';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}